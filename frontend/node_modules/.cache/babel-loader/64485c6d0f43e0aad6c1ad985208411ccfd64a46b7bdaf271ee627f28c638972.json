{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\informasud\\\\Desktop\\\\Projets\\\\ESG_Banchmarking_Project\\\\frontend\\\\src\\\\components\\\\Animations\\\\HeroParticles.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './HeroParticles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeroParticles = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n\n    // Configuration des particules\n    const particles = [];\n    const particleCount = 50;\n    const colors = ['rgba(99, 102, 241, 0.3)',\n    // Primary\n    'rgba(139, 92, 246, 0.3)',\n    // Purple\n    'rgba(14, 165, 233, 0.3)',\n    // Blue\n    'rgba(34, 211, 238, 0.3)' // Cyan\n    ];\n\n    // Redimensionnement du canvas\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n\n    // Classe Particule\n    class Particle {\n      constructor() {\n        this.reset();\n      }\n      reset() {\n        this.x = Math.random() * canvas.width;\n        this.y = Math.random() * canvas.height;\n        this.size = Math.random() * 3 + 1;\n        this.speedX = Math.random() * 1 - 0.5;\n        this.speedY = Math.random() * 1 - 0.5;\n        this.color = colors[Math.floor(Math.random() * colors.length)];\n        this.alpha = Math.random() * 0.5 + 0.1;\n        this.waveOffset = Math.random() * Math.PI * 2;\n      }\n      update() {\n        // Mouvement avec oscillation\n        this.waveOffset += 0.02;\n        this.x += this.speedX + Math.sin(this.waveOffset) * 0.3;\n        this.y += this.speedY + Math.cos(this.waveOffset) * 0.3;\n\n        // Réapparition si hors écran\n        if (this.x < -50 || this.x > canvas.width + 50 || this.y < -50 || this.y > canvas.height + 50) {\n          this.reset();\n          this.x = Math.random() * canvas.width;\n          this.y = Math.random() * canvas.height;\n        }\n      }\n      draw() {\n        ctx.save();\n        ctx.globalAlpha = this.alpha;\n        ctx.fillStyle = this.color;\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n\n    // Création des particules\n    const createParticles = () => {\n      for (let i = 0; i < particleCount; i++) {\n        particles.push(new Particle());\n      }\n    };\n\n    // Animation\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Dessiner les connexions entre particules\n      ctx.strokeStyle = 'rgba(99, 102, 241, 0.1)';\n      ctx.lineWidth = 0.5;\n      for (let i = 0; i < particles.length; i++) {\n        for (let j = i + 1; j < particles.length; j++) {\n          const dx = particles[i].x - particles[j].x;\n          const dy = particles[i].y - particles[j].y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance < 100) {\n            ctx.beginPath();\n            ctx.moveTo(particles[i].x, particles[i].y);\n            ctx.lineTo(particles[j].x, particles[j].y);\n            ctx.stroke();\n          }\n        }\n      }\n\n      // Mettre à jour et dessiner les particules\n      particles.forEach(particle => {\n        particle.update();\n        particle.draw();\n      });\n      animationFrameId = requestAnimationFrame(animate);\n    };\n\n    // Initialisation\n    resizeCanvas();\n    createParticles();\n    animate();\n\n    // Gestion du redimensionnement\n    window.addEventListener('resize', resizeCanvas);\n\n    // Nettoyage\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n      window.removeEventListener('resize', resizeCanvas);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    className: \"hero-particles\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(HeroParticles, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = HeroParticles;\nexport default HeroParticles;\nvar _c;\n$RefreshReg$(_c, \"HeroParticles\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","HeroParticles","_s","canvasRef","canvas","current","ctx","getContext","animationFrameId","particles","particleCount","colors","resizeCanvas","width","window","innerWidth","height","innerHeight","Particle","constructor","reset","x","Math","random","y","size","speedX","speedY","color","floor","length","alpha","waveOffset","PI","update","sin","cos","draw","save","globalAlpha","fillStyle","beginPath","arc","fill","restore","createParticles","i","push","animate","clearRect","strokeStyle","lineWidth","j","dx","dy","distance","sqrt","moveTo","lineTo","stroke","forEach","particle","requestAnimationFrame","addEventListener","cancelAnimationFrame","removeEventListener","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/informasud/Desktop/Projets/ESG_Banchmarking_Project/frontend/src/components/Animations/HeroParticles.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport './HeroParticles.css';\r\n\r\nconst HeroParticles = () => {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    let animationFrameId;\r\n\r\n    // Configuration des particules\r\n    const particles = [];\r\n    const particleCount = 50;\r\n    const colors = [\r\n      'rgba(99, 102, 241, 0.3)',    // Primary\r\n      'rgba(139, 92, 246, 0.3)',    // Purple\r\n      'rgba(14, 165, 233, 0.3)',    // Blue\r\n      'rgba(34, 211, 238, 0.3)',    // Cyan\r\n    ];\r\n\r\n    // Redimensionnement du canvas\r\n    const resizeCanvas = () => {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n    };\r\n\r\n    // Classe Particule\r\n    class Particle {\r\n      constructor() {\r\n        this.reset();\r\n      }\r\n\r\n      reset() {\r\n        this.x = Math.random() * canvas.width;\r\n        this.y = Math.random() * canvas.height;\r\n        this.size = Math.random() * 3 + 1;\r\n        this.speedX = Math.random() * 1 - 0.5;\r\n        this.speedY = Math.random() * 1 - 0.5;\r\n        this.color = colors[Math.floor(Math.random() * colors.length)];\r\n        this.alpha = Math.random() * 0.5 + 0.1;\r\n        this.waveOffset = Math.random() * Math.PI * 2;\r\n      }\r\n\r\n      update() {\r\n        // Mouvement avec oscillation\r\n        this.waveOffset += 0.02;\r\n        this.x += this.speedX + Math.sin(this.waveOffset) * 0.3;\r\n        this.y += this.speedY + Math.cos(this.waveOffset) * 0.3;\r\n\r\n        // Réapparition si hors écran\r\n        if (this.x < -50 || this.x > canvas.width + 50 || \r\n            this.y < -50 || this.y > canvas.height + 50) {\r\n          this.reset();\r\n          this.x = Math.random() * canvas.width;\r\n          this.y = Math.random() * canvas.height;\r\n        }\r\n      }\r\n\r\n      draw() {\r\n        ctx.save();\r\n        ctx.globalAlpha = this.alpha;\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n        ctx.fill();\r\n        ctx.restore();\r\n      }\r\n    }\r\n\r\n    // Création des particules\r\n    const createParticles = () => {\r\n      for (let i = 0; i < particleCount; i++) {\r\n        particles.push(new Particle());\r\n      }\r\n    };\r\n\r\n    // Animation\r\n    const animate = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      \r\n      // Dessiner les connexions entre particules\r\n      ctx.strokeStyle = 'rgba(99, 102, 241, 0.1)';\r\n      ctx.lineWidth = 0.5;\r\n      \r\n      for (let i = 0; i < particles.length; i++) {\r\n        for (let j = i + 1; j < particles.length; j++) {\r\n          const dx = particles[i].x - particles[j].x;\r\n          const dy = particles[i].y - particles[j].y;\r\n          const distance = Math.sqrt(dx * dx + dy * dy);\r\n          \r\n          if (distance < 100) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(particles[i].x, particles[i].y);\r\n            ctx.lineTo(particles[j].x, particles[j].y);\r\n            ctx.stroke();\r\n          }\r\n        }\r\n      }\r\n\r\n      // Mettre à jour et dessiner les particules\r\n      particles.forEach(particle => {\r\n        particle.update();\r\n        particle.draw();\r\n      });\r\n\r\n      animationFrameId = requestAnimationFrame(animate);\r\n    };\r\n\r\n    // Initialisation\r\n    resizeCanvas();\r\n    createParticles();\r\n    animate();\r\n\r\n    // Gestion du redimensionnement\r\n    window.addEventListener('resize', resizeCanvas);\r\n\r\n    // Nettoyage\r\n    return () => {\r\n      cancelAnimationFrame(animationFrameId);\r\n      window.removeEventListener('resize', resizeCanvas);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <canvas \r\n      ref={canvasRef} \r\n      className=\"hero-particles\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default HeroParticles;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}