{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\informasud\\\\Desktop\\\\Projets\\\\ESG_Banchmarking_Project\\\\frontend\\\\src\\\\components\\\\Comparisons.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Radar, ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport apiService from '../services/api';\nimport './Comparisons.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Comparisons = () => {\n  _s();\n  const [companies, setCompanies] = useState([]);\n  const [selectedCompanies, setSelectedCompanies] = useState([]);\n  const [comparisonData, setComparisonData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [compareBy, setCompareBy] = useState('topic_fr');\n  const [minConfidence, setMinConfidence] = useState(0.5);\n  useEffect(() => {\n    loadCompanies();\n  }, []);\n  useEffect(() => {\n    if (selectedCompanies.length > 0) {\n      loadComparisonData();\n    }\n  }, [selectedCompanies, compareBy, minConfidence]);\n  const loadCompanies = async () => {\n    try {\n      const response = await apiService.getCompanies();\n      setCompanies(response.data);\n      // Sélectionner les 3 premières entreprises par défaut\n      setSelectedCompanies(response.data.slice(0, 3));\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const loadComparisonData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await apiService.getComparisonData(selectedCompanies, compareBy, minConfidence);\n      setComparisonData(response.data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCompanyToggle = company => {\n    if (selectedCompanies.includes(company)) {\n      setSelectedCompanies(selectedCompanies.filter(c => c !== company));\n    } else {\n      if (selectedCompanies.length < 6) {\n        setSelectedCompanies([...selectedCompanies, company]);\n      } else {\n        alert('Maximum 6 entreprises peuvent être sélectionnées');\n      }\n    }\n  };\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8', '#82CA9D'];\n  if (companies.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comparisons-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No companies available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Process some PDFs to see comparisons.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comparisons-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u2696\\uFE0F Comparaisons multi-entreprises\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"S\\xE9lectionner les entreprises \\xE0 comparer (max 6):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"companies-checkboxes\",\n          children: companies.map(company => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedCompanies.includes(company),\n              onChange: () => handleCompanyToggle(company),\n              disabled: !selectedCompanies.includes(company) && selectedCompanies.length >= 6\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), company]\n          }, company, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Comparer par:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radio-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"topic_fr\",\n              checked: compareBy === 'topic_fr',\n              onChange: e => setCompareBy(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), \"Topic Fran\\xE7ais\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"kpi_name\",\n              checked: compareBy === 'kpi_name',\n              onChange: e => setCompareBy(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), \"KPI Name\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Confiance min: \", minConfidence.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.01\",\n          value: minConfidence,\n          onChange: e => setMinConfidence(parseFloat(e.target.value)),\n          className: \"confidence-slider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading comparison data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Error loading comparison data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadComparisonData,\n        className: \"retry-btn\",\n        children: \"\\uD83D\\uDD04 Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this), comparisonData && !loading && selectedCompanies.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83C\\uDF0D Radar Chart \\u2014 profil comparatif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 500,\n            children: /*#__PURE__*/_jsxDEV(RadarChart, {\n              data: comparisonData.radar_data.categories.map((category, index) => {\n                const dataPoint = {\n                  category\n                };\n                selectedCompanies.forEach(company => {\n                  var _comparisonData$radar;\n                  dataPoint[company] = ((_comparisonData$radar = comparisonData.radar_data.companies[company]) === null || _comparisonData$radar === void 0 ? void 0 : _comparisonData$radar[index]) || 0;\n                });\n                return dataPoint;\n              }),\n              children: [/*#__PURE__*/_jsxDEV(PolarGrid, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(PolarAngleAxis, {\n                dataKey: \"category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(PolarRadiusAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this), selectedCompanies.map((company, index) => /*#__PURE__*/_jsxDEV(Radar, {\n                name: company,\n                dataKey: company,\n                stroke: COLORS[index % COLORS.length],\n                fill: COLORS[index % COLORS.length],\n                fillOpacity: 0.3\n              }, company, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), comparisonData.similarity_data && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDD01 Similarit\\xE9 entre entreprises (cosine)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"similarity-matrix\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 23\n                }, this), comparisonData.similarity_data.companies.map(company => /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: company\n                }, company, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: comparisonData.similarity_data.matrix.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"company-name\",\n                  children: comparisonData.similarity_data.companies[i]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 25\n                }, this), row.map((value, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"similarity-cell\",\n                  style: {\n                    backgroundColor: `rgba(0, 136, 254, ${value})`,\n                    color: value > 0.5 ? 'white' : 'black'\n                  },\n                  children: value.toFixed(2)\n                }, j, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 27\n                }, this))]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }, this), comparisonData.radar_data.categories.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCCA Comparaison par cat\\xE9gorie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar-charts-grid\",\n          children: comparisonData.radar_data.categories.slice(0, 6).map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bar-chart-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 300,\n              children: /*#__PURE__*/_jsxDEV(BarChart, {\n                data: selectedCompanies.map(company => {\n                  var _comparisonData$radar2;\n                  return {\n                    company,\n                    value: ((_comparisonData$radar2 = comparisonData.radar_data.companies[company]) === null || _comparisonData$radar2 === void 0 ? void 0 : _comparisonData$radar2[comparisonData.radar_data.categories.indexOf(category)]) || 0\n                  };\n                }),\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"company\",\n                  angle: -45,\n                  textAnchor: \"end\",\n                  height: 80\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: \"value\",\n                  fill: \"#8884d8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 21\n            }, this)]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), selectedCompanies.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-selection\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Veuillez s\\xE9lectionner au moins une entreprise pour voir les comparaisons.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Comparisons, \"3GFUOaHGCOQiUD0ZGdeF6MGVK9w=\");\n_c = Comparisons;\nexport default Comparisons;\nvar _c;\n$RefreshReg$(_c, \"Comparisons\");","map":{"version":3,"names":["React","useState","useEffect","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","ResponsiveContainer","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","apiService","jsxDEV","_jsxDEV","Fragment","_Fragment","Comparisons","_s","companies","setCompanies","selectedCompanies","setSelectedCompanies","comparisonData","setComparisonData","loading","setLoading","error","setError","compareBy","setCompareBy","minConfidence","setMinConfidence","loadCompanies","length","loadComparisonData","response","getCompanies","data","slice","err","message","getComparisonData","handleCompanyToggle","company","includes","filter","c","alert","COLORS","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","checked","onChange","disabled","value","e","target","toFixed","min","max","step","parseFloat","onClick","width","height","radar_data","categories","category","index","dataPoint","forEach","_comparisonData$radar","dataKey","name","stroke","fill","fillOpacity","similarity_data","matrix","row","i","j","style","backgroundColor","color","_comparisonData$radar2","indexOf","strokeDasharray","angle","textAnchor","_c","$RefreshReg$"],"sources":["C:/Users/informasud/Desktop/Projets/ESG_Banchmarking_Project/frontend/src/components/Comparisons.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Radar,\r\n  ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend\r\n} from 'recharts';\r\nimport apiService from '../services/api';\r\nimport './Comparisons.css';\r\n\r\nconst Comparisons = () => {\r\n  const [companies, setCompanies] = useState([]);\r\n  const [selectedCompanies, setSelectedCompanies] = useState([]);\r\n  const [comparisonData, setComparisonData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [compareBy, setCompareBy] = useState('topic_fr');\r\n  const [minConfidence, setMinConfidence] = useState(0.5);\r\n\r\n  useEffect(() => {\r\n    loadCompanies();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompanies.length > 0) {\r\n      loadComparisonData();\r\n    }\r\n  }, [selectedCompanies, compareBy, minConfidence]);\r\n\r\n  const loadCompanies = async () => {\r\n    try {\r\n      const response = await apiService.getCompanies();\r\n      setCompanies(response.data);\r\n      // Sélectionner les 3 premières entreprises par défaut\r\n      setSelectedCompanies(response.data.slice(0, 3));\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const loadComparisonData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await apiService.getComparisonData(selectedCompanies, compareBy, minConfidence);\r\n      setComparisonData(response.data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCompanyToggle = (company) => {\r\n    if (selectedCompanies.includes(company)) {\r\n      setSelectedCompanies(selectedCompanies.filter(c => c !== company));\r\n    } else {\r\n      if (selectedCompanies.length < 6) {\r\n        setSelectedCompanies([...selectedCompanies, company]);\r\n      } else {\r\n        alert('Maximum 6 entreprises peuvent être sélectionnées');\r\n      }\r\n    }\r\n  };\r\n\r\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8', '#82CA9D'];\r\n\r\n  if (companies.length === 0) {\r\n    return (\r\n      <div className=\"comparisons-container\">\r\n        <div className=\"no-data\">\r\n          <h3>No companies available</h3>\r\n          <p>Process some PDFs to see comparisons.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"comparisons-container\">\r\n      <h2>⚖️ Comparaisons multi-entreprises</h2>\r\n\r\n      <div className=\"controls-section\">\r\n        <div className=\"control-group\">\r\n          <label>Sélectionner les entreprises à comparer (max 6):</label>\r\n          <div className=\"companies-checkboxes\">\r\n            {companies.map(company => (\r\n              <label key={company} className=\"checkbox-label\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selectedCompanies.includes(company)}\r\n                  onChange={() => handleCompanyToggle(company)}\r\n                  disabled={!selectedCompanies.includes(company) && selectedCompanies.length >= 6}\r\n                />\r\n                {company}\r\n              </label>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"control-group\">\r\n          <label>Comparer par:</label>\r\n          <div className=\"radio-group\">\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                value=\"topic_fr\"\r\n                checked={compareBy === 'topic_fr'}\r\n                onChange={(e) => setCompareBy(e.target.value)}\r\n              />\r\n              Topic Français\r\n            </label>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                value=\"kpi_name\"\r\n                checked={compareBy === 'kpi_name'}\r\n                onChange={(e) => setCompareBy(e.target.value)}\r\n              />\r\n              KPI Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"control-group\">\r\n          <label>Confiance min: {minConfidence.toFixed(2)}</label>\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            step=\"0.01\"\r\n            value={minConfidence}\r\n            onChange={(e) => setMinConfidence(parseFloat(e.target.value))}\r\n            className=\"confidence-slider\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {loading && (\r\n        <div className=\"loading\">Loading comparison data...</div>\r\n      )}\r\n\r\n      {error && (\r\n        <div className=\"error\">\r\n          <h3>Error loading comparison data</h3>\r\n          <p>{error}</p>\r\n          <button onClick={loadComparisonData} className=\"retry-btn\">\r\n            🔄 Retry\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {comparisonData && !loading && selectedCompanies.length > 0 && (\r\n        <>\r\n          {/* Radar Chart */}\r\n          <div className=\"chart-section\">\r\n            <h3>🌍 Radar Chart — profil comparatif</h3>\r\n            <div className=\"chart-container\">\r\n              <ResponsiveContainer width=\"100%\" height={500}>\r\n                <RadarChart data={comparisonData.radar_data.categories.map((category, index) => {\r\n                  const dataPoint = { category };\r\n                  selectedCompanies.forEach(company => {\r\n                    dataPoint[company] = comparisonData.radar_data.companies[company]?.[index] || 0;\r\n                  });\r\n                  return dataPoint;\r\n                })}>\r\n                  <PolarGrid />\r\n                  <PolarAngleAxis dataKey=\"category\" />\r\n                  <PolarRadiusAxis />\r\n                  {selectedCompanies.map((company, index) => (\r\n                    <Radar\r\n                      key={company}\r\n                      name={company}\r\n                      dataKey={company}\r\n                      stroke={COLORS[index % COLORS.length]}\r\n                      fill={COLORS[index % COLORS.length]}\r\n                      fillOpacity={0.3}\r\n                    />\r\n                  ))}\r\n                  <Legend />\r\n                  <Tooltip />\r\n                </RadarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Similarity Matrix */}\r\n          {comparisonData.similarity_data && (\r\n            <div className=\"chart-section\">\r\n              <h3>🔁 Similarité entre entreprises (cosine)</h3>\r\n              <div className=\"similarity-matrix\">\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th></th>\r\n                      {comparisonData.similarity_data.companies.map(company => (\r\n                        <th key={company}>{company}</th>\r\n                      ))}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {comparisonData.similarity_data.matrix.map((row, i) => (\r\n                      <tr key={i}>\r\n                        <td className=\"company-name\">{comparisonData.similarity_data.companies[i]}</td>\r\n                        {row.map((value, j) => (\r\n                          <td \r\n                            key={j}\r\n                            className=\"similarity-cell\"\r\n                            style={{\r\n                              backgroundColor: `rgba(0, 136, 254, ${value})`,\r\n                              color: value > 0.5 ? 'white' : 'black'\r\n                            }}\r\n                          >\r\n                            {value.toFixed(2)}\r\n                          </td>\r\n                        ))}\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Bar Charts for each category */}\r\n          {comparisonData.radar_data.categories.length > 0 && (\r\n            <div className=\"chart-section\">\r\n              <h3>📊 Comparaison par catégorie</h3>\r\n              <div className=\"bar-charts-grid\">\r\n                {comparisonData.radar_data.categories.slice(0, 6).map(category => (\r\n                  <div key={category} className=\"bar-chart-container\">\r\n                    <h4>{category}</h4>\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                      <BarChart\r\n                        data={selectedCompanies.map(company => ({\r\n                          company,\r\n                          value: comparisonData.radar_data.companies[company]?.[\r\n                            comparisonData.radar_data.categories.indexOf(category)\r\n                          ] || 0\r\n                        }))}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"company\" angle={-45} textAnchor=\"end\" height={80} />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Bar dataKey=\"value\" fill=\"#8884d8\" />\r\n                      </BarChart>\r\n                    </ResponsiveContainer>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {selectedCompanies.length === 0 && !loading && (\r\n        <div className=\"no-selection\">\r\n          <p>Veuillez sélectionner au moins une entreprise pour voir les comparaisons.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comparisons;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}