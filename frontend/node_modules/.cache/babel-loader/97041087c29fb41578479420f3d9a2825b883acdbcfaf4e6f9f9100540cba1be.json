{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\informasud\\\\Desktop\\\\Projets\\\\ESG_Banchmarking_Project\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\n// ChatbotInterface.jsx\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Send, Trash2, Moon, Sun, Plus, Bot, User, Loader2, Download, Upload } from 'lucide-react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotInterface = () => {\n  _s();\n  var _conversations$find;\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [theme, setTheme] = useState('dark');\n  const [conversations, setConversations] = useState([]);\n  const [currentConversationId, setCurrentConversationId] = useState(null);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const messagesEndRef = useRef(null);\n\n  // Charger les conversations sauvegardées au démarrage\n  useEffect(() => {\n    const savedConversations = localStorage.getItem('esg-chatbot-conversations');\n    const savedTheme = localStorage.getItem('esg-chatbot-theme');\n    if (savedConversations) {\n      const convs = JSON.parse(savedConversations);\n      setConversations(convs);\n      if (convs.length > 0) {\n        setCurrentConversationId(convs[0].id);\n        setMessages(convs[0].messages);\n      }\n    }\n    if (savedTheme) {\n      setTheme(savedTheme);\n    }\n  }, []);\n\n  // Sauvegarder les conversations\n  useEffect(() => {\n    localStorage.setItem('esg-chatbot-conversations', JSON.stringify(conversations));\n  }, [conversations]);\n\n  // Sauvegarder le thème\n  useEffect(() => {\n    localStorage.setItem('esg-chatbot-theme', theme);\n    document.body.setAttribute('data-theme', theme);\n  }, [theme]);\n\n  // Scroll vers le bas\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // Créer une nouvelle conversation\n  const createNewConversation = () => {\n    const newConversation = {\n      id: Date.now().toString(),\n      title: 'Nouvelle discussion',\n      messages: [],\n      createdAt: new Date().toISOString()\n    };\n    setConversations(prev => [newConversation, ...prev]);\n    setCurrentConversationId(newConversation.id);\n    setMessages([]);\n  };\n\n  // Supprimer une conversation\n  const deleteConversation = (conversationId, e) => {\n    e.stopPropagation();\n    setConversations(prev => prev.filter(conv => conv.id !== conversationId));\n    if (currentConversationId === conversationId) {\n      if (conversations.length > 1) {\n        const remainingConvs = conversations.filter(conv => conv.id !== conversationId);\n        setCurrentConversationId(remainingConvs[0].id);\n        setMessages(remainingConvs[0].messages);\n      } else {\n        setCurrentConversationId(null);\n        setMessages([]);\n      }\n    }\n  };\n\n  // Changer de conversation\n  const switchConversation = conversationId => {\n    const conversation = conversations.find(conv => conv.id === conversationId);\n    if (conversation) {\n      setCurrentConversationId(conversationId);\n      setMessages(conversation.messages);\n    }\n  };\n\n  // Mettre à jour le titre de la conversation\n  const updateConversationTitle = (conversationId, newTitle) => {\n    setConversations(prev => prev.map(conv => conv.id === conversationId ? {\n      ...conv,\n      title: newTitle\n    } : conv));\n  };\n\n  // Envoyer un message\n  const sendMessage = async () => {\n    if (!inputMessage.trim() || isLoading) return;\n    const userMessage = {\n      id: Date.now().toString(),\n      content: inputMessage,\n      role: 'user',\n      timestamp: new Date().toISOString()\n    };\n\n    // Si pas de conversation active, en créer une\n    let conversationId = currentConversationId;\n    if (!conversationId) {\n      const newConv = {\n        id: Date.now().toString(),\n        title: inputMessage.slice(0, 30) + (inputMessage.length > 30 ? '...' : ''),\n        messages: [userMessage],\n        createdAt: new Date().toISOString()\n      };\n      setConversations(prev => [newConv, ...prev]);\n      setCurrentConversationId(newConv.id);\n      setMessages([userMessage]);\n      conversationId = newConv.id;\n    } else {\n      const updatedMessages = [...messages, userMessage];\n      setMessages(updatedMessages);\n\n      // Mettre à jour la conversation\n      setConversations(prev => prev.map(conv => conv.id === conversationId ? {\n        ...conv,\n        messages: updatedMessages\n      } : conv));\n    }\n    setInputMessage('');\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost:5000/api/chatbot/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question: inputMessage,\n          conversation_id: conversationId\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Erreur lors de la requête');\n      }\n      const data = await response.json();\n      const botMessage = {\n        id: (Date.now() + 1).toString(),\n        content: data.response,\n        role: 'assistant',\n        timestamp: new Date().toISOString()\n      };\n      const finalMessages = [...messages, userMessage, botMessage];\n      setMessages(finalMessages);\n\n      // Mettre à jour la conversation avec la réponse\n      setConversations(prev => prev.map(conv => conv.id === conversationId ? {\n        ...conv,\n        messages: finalMessages,\n        title: conv.messages.length === 0 ? inputMessage.slice(0, 30) + (inputMessage.length > 30 ? '...' : '') : conv.title\n      } : conv));\n    } catch (error) {\n      console.error('Erreur:', error);\n      const errorMessage = {\n        id: (Date.now() + 1).toString(),\n        content: 'Désolé, une erreur est survenue. Veuillez réessayer.',\n        role: 'assistant',\n        timestamp: new Date().toISOString(),\n        isError: true\n      };\n      const finalMessages = [...messages, userMessage, errorMessage];\n      setMessages(finalMessages);\n      setConversations(prev => prev.map(conv => conv.id === conversationId ? {\n        ...conv,\n        messages: finalMessages\n      } : conv));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Exporter une conversation\n  const exportConversation = conversationId => {\n    const conversation = conversations.find(conv => conv.id === conversationId);\n    if (!conversation) return;\n    const data = {\n      ...conversation,\n      exportedAt: new Date().toISOString()\n    };\n    const blob = new Blob([JSON.stringify(data, null, 2)], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `conversation-esg-${conversationId}.json`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // Importer une conversation\n  const importConversation = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const importedConv = JSON.parse(e.target.result);\n        const newConversation = {\n          ...importedConv,\n          id: Date.now().toString(),\n          importedAt: new Date().toISOString()\n        };\n        setConversations(prev => [newConversation, ...prev]);\n        setCurrentConversationId(newConversation.id);\n        setMessages(newConversation.messages);\n      } catch (error) {\n        alert('Erreur lors de l\\'import du fichier');\n      }\n    };\n    reader.readAsText(file);\n    event.target.value = '';\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  const formatTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString('fr-FR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chatbot-container ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${isSidebarOpen ? 'open' : 'closed'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-chat-btn\",\n          onClick: createNewConversation,\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), \"Nouvelle discussion\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"import-export\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"import-conversation\",\n            accept: \".json\",\n            onChange: importConversation,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"import-conversation\",\n            className: \"icon-btn\",\n            title: \"Importer\",\n            children: /*#__PURE__*/_jsxDEV(Upload, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversations-list\",\n        children: [conversations.map(conversation => {\n          var _conversation$message;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `conversation-item ${currentConversationId === conversation.id ? 'active' : ''}`,\n            onClick: () => switchConversation(conversation.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"conversation-title\",\n                children: conversation.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"conversation-preview\",\n                children: conversation.messages.length > 0 ? ((_conversation$message = conversation.messages[conversation.messages.length - 1]) === null || _conversation$message === void 0 ? void 0 : _conversation$message.content.slice(0, 50)) + '...' : 'Discussion vide'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"conversation-meta\",\n                children: new Date(conversation.createdAt).toLocaleDateString('fr-FR')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"icon-btn\",\n                onClick: e => {\n                  e.stopPropagation();\n                  exportConversation(conversation.id);\n                },\n                title: \"Exporter\",\n                children: /*#__PURE__*/_jsxDEV(Download, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"icon-btn delete-btn\",\n                onClick: e => deleteConversation(conversation.id, e),\n                title: \"Supprimer\",\n                children: /*#__PURE__*/_jsxDEV(Trash2, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this)]\n          }, conversation.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this);\n        }), conversations.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: [/*#__PURE__*/_jsxDEV(Bot, {\n            size: 48\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Aucune discussion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Commencez une nouvelle conversation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sidebar-toggle\",\n          onClick: () => setIsSidebarOpen(!isSidebarOpen),\n          children: \"\\u2630\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-title\",\n          children: currentConversationId ? ((_conversations$find = conversations.find(c => c.id === currentConversationId)) === null || _conversations$find === void 0 ? void 0 : _conversations$find.title) || 'Discussion ESG' : 'Assistant ESG'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"theme-toggle\",\n          onClick: () => setTheme(theme === 'light' ? 'dark' : 'light'),\n          title: `Passer en mode ${theme === 'light' ? 'sombre' : 'clair'}`,\n          children: theme === 'light' ? /*#__PURE__*/_jsxDEV(Moon, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(Sun, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container\",\n        children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-message\",\n          children: [/*#__PURE__*/_jsxDEV(Bot, {\n            size: 64\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Assistant ESG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Posez-moi des questions sur les donn\\xE9es ESG extraites de vos documents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"suggestion-btn\",\n              onClick: () => setInputMessage(\"Quelles sont les émissions de CO2 les plus élevées ?\"),\n              children: \"Quelles sont les \\xE9missions de CO2 les plus \\xE9lev\\xE9es ?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"suggestion-btn\",\n              onClick: () => setInputMessage(\"Compare les performances environnementales des entreprises\"),\n              children: \"Compare les performances environnementales des entreprises\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"suggestion-btn\",\n              onClick: () => setInputMessage(\"Quels sont les KPIs sociaux extraits ?\"),\n              children: \"Quels sont les KPIs sociaux extraits ?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.role} ${message.isError ? 'error' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: message.role === 'user' ? /*#__PURE__*/_jsxDEV(User, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 46\n            }, this) : /*#__PURE__*/_jsxDEV(Bot, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              children: message.content.split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: line\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-time\",\n              children: formatTime(message.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 17\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 15\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message assistant\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: /*#__PURE__*/_jsxDEV(Bot, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(Loader2, {\n                size: 16,\n                className: \"spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"L'assistant r\\xE9dige...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: \"Posez votre question sur les donn\\xE9es ESG...\",\n            rows: \"1\",\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send-btn\",\n            onClick: sendMessage,\n            disabled: !inputMessage.trim() || isLoading,\n            children: isLoading ? /*#__PURE__*/_jsxDEV(Loader2, {\n              size: 20,\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(Send, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 72\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Assistant ESG - Bas\\xE9 sur Mistral via Ollama\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotInterface, \"o2jV+KhHacXH00S6ZWz1HUBJavQ=\");\n_c = ChatbotInterface;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"ChatbotInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Send","Trash2","Moon","Sun","Plus","Bot","User","Loader2","Download","Upload","jsxDEV","_jsxDEV","ChatbotInterface","_s","_conversations$find","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","theme","setTheme","conversations","setConversations","currentConversationId","setCurrentConversationId","isSidebarOpen","setIsSidebarOpen","messagesEndRef","savedConversations","localStorage","getItem","savedTheme","convs","JSON","parse","length","id","setItem","stringify","document","body","setAttribute","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","createNewConversation","newConversation","Date","now","toString","title","createdAt","toISOString","prev","deleteConversation","conversationId","e","stopPropagation","filter","conv","remainingConvs","switchConversation","conversation","find","updateConversationTitle","newTitle","map","sendMessage","trim","userMessage","content","role","timestamp","newConv","slice","updatedMessages","response","fetch","method","headers","question","conversation_id","ok","Error","data","json","botMessage","finalMessages","error","console","errorMessage","isError","exportConversation","exportedAt","blob","Blob","type","url","URL","createObjectURL","a","createElement","href","download","appendChild","click","removeChild","revokeObjectURL","importConversation","event","file","target","files","reader","FileReader","onload","importedConv","result","importedAt","alert","readAsText","value","handleKeyPress","key","shiftKey","preventDefault","formatTime","toLocaleTimeString","hour","minute","className","children","onClick","size","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","style","display","htmlFor","_conversation$message","toLocaleDateString","c","message","split","line","i","ref","onKeyPress","placeholder","rows","disabled","_c","Chatbot","$RefreshReg$"],"sources":["C:/Users/informasud/Desktop/Projets/ESG_Banchmarking_Project/frontend/src/components/Chatbot.js"],"sourcesContent":["// ChatbotInterface.jsx\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { \r\n  Send, \r\n  Trash2, \r\n  Moon, \r\n  Sun, \r\n  Plus,\r\n  Bot, \r\n  User,\r\n  Loader2,\r\n  Download,\r\n  Upload\r\n} from 'lucide-react';\r\nimport './Chatbot.css';\r\n\r\nconst ChatbotInterface = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [theme, setTheme] = useState('dark');\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentConversationId, setCurrentConversationId] = useState(null);\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Charger les conversations sauvegardées au démarrage\r\n  useEffect(() => {\r\n    const savedConversations = localStorage.getItem('esg-chatbot-conversations');\r\n    const savedTheme = localStorage.getItem('esg-chatbot-theme');\r\n    \r\n    if (savedConversations) {\r\n      const convs = JSON.parse(savedConversations);\r\n      setConversations(convs);\r\n      if (convs.length > 0) {\r\n        setCurrentConversationId(convs[0].id);\r\n        setMessages(convs[0].messages);\r\n      }\r\n    }\r\n    \r\n    if (savedTheme) {\r\n      setTheme(savedTheme);\r\n    }\r\n  }, []);\r\n\r\n  // Sauvegarder les conversations\r\n  useEffect(() => {\r\n    localStorage.setItem('esg-chatbot-conversations', JSON.stringify(conversations));\r\n  }, [conversations]);\r\n\r\n  // Sauvegarder le thème\r\n  useEffect(() => {\r\n    localStorage.setItem('esg-chatbot-theme', theme);\r\n    document.body.setAttribute('data-theme', theme);\r\n  }, [theme]);\r\n\r\n  // Scroll vers le bas\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  // Créer une nouvelle conversation\r\n  const createNewConversation = () => {\r\n    const newConversation = {\r\n      id: Date.now().toString(),\r\n      title: 'Nouvelle discussion',\r\n      messages: [],\r\n      createdAt: new Date().toISOString()\r\n    };\r\n    \r\n    setConversations(prev => [newConversation, ...prev]);\r\n    setCurrentConversationId(newConversation.id);\r\n    setMessages([]);\r\n  };\r\n\r\n  // Supprimer une conversation\r\n  const deleteConversation = (conversationId, e) => {\r\n    e.stopPropagation();\r\n    setConversations(prev => prev.filter(conv => conv.id !== conversationId));\r\n    \r\n    if (currentConversationId === conversationId) {\r\n      if (conversations.length > 1) {\r\n        const remainingConvs = conversations.filter(conv => conv.id !== conversationId);\r\n        setCurrentConversationId(remainingConvs[0].id);\r\n        setMessages(remainingConvs[0].messages);\r\n      } else {\r\n        setCurrentConversationId(null);\r\n        setMessages([]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Changer de conversation\r\n  const switchConversation = (conversationId) => {\r\n    const conversation = conversations.find(conv => conv.id === conversationId);\r\n    if (conversation) {\r\n      setCurrentConversationId(conversationId);\r\n      setMessages(conversation.messages);\r\n    }\r\n  };\r\n\r\n  // Mettre à jour le titre de la conversation\r\n  const updateConversationTitle = (conversationId, newTitle) => {\r\n    setConversations(prev => \r\n      prev.map(conv => \r\n        conv.id === conversationId ? { ...conv, title: newTitle } : conv\r\n      )\r\n    );\r\n  };\r\n\r\n  // Envoyer un message\r\n  const sendMessage = async () => {\r\n    if (!inputMessage.trim() || isLoading) return;\r\n\r\n    const userMessage = {\r\n      id: Date.now().toString(),\r\n      content: inputMessage,\r\n      role: 'user',\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    // Si pas de conversation active, en créer une\r\n    let conversationId = currentConversationId;\r\n    if (!conversationId) {\r\n      const newConv = {\r\n        id: Date.now().toString(),\r\n        title: inputMessage.slice(0, 30) + (inputMessage.length > 30 ? '...' : ''),\r\n        messages: [userMessage],\r\n        createdAt: new Date().toISOString()\r\n      };\r\n      setConversations(prev => [newConv, ...prev]);\r\n      setCurrentConversationId(newConv.id);\r\n      setMessages([userMessage]);\r\n      conversationId = newConv.id;\r\n    } else {\r\n      const updatedMessages = [...messages, userMessage];\r\n      setMessages(updatedMessages);\r\n      \r\n      // Mettre à jour la conversation\r\n      setConversations(prev => \r\n        prev.map(conv => \r\n          conv.id === conversationId \r\n            ? { ...conv, messages: updatedMessages }\r\n            : conv\r\n        )\r\n      );\r\n    }\r\n\r\n    setInputMessage('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/chatbot/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          question: inputMessage,\r\n          conversation_id: conversationId\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Erreur lors de la requête');\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      const botMessage = {\r\n        id: (Date.now() + 1).toString(),\r\n        content: data.response,\r\n        role: 'assistant',\r\n        timestamp: new Date().toISOString()\r\n      };\r\n\r\n      const finalMessages = [...messages, userMessage, botMessage];\r\n      setMessages(finalMessages);\r\n\r\n      // Mettre à jour la conversation avec la réponse\r\n      setConversations(prev => \r\n        prev.map(conv => \r\n          conv.id === conversationId \r\n            ? { \r\n                ...conv, \r\n                messages: finalMessages,\r\n                title: conv.messages.length === 0 ? inputMessage.slice(0, 30) + (inputMessage.length > 30 ? '...' : '') : conv.title\r\n              }\r\n            : conv\r\n        )\r\n      );\r\n\r\n    } catch (error) {\r\n      console.error('Erreur:', error);\r\n      \r\n      const errorMessage = {\r\n        id: (Date.now() + 1).toString(),\r\n        content: 'Désolé, une erreur est survenue. Veuillez réessayer.',\r\n        role: 'assistant',\r\n        timestamp: new Date().toISOString(),\r\n        isError: true\r\n      };\r\n\r\n      const finalMessages = [...messages, userMessage, errorMessage];\r\n      setMessages(finalMessages);\r\n\r\n      setConversations(prev => \r\n        prev.map(conv => \r\n          conv.id === conversationId \r\n            ? { ...conv, messages: finalMessages }\r\n            : conv\r\n        )\r\n      );\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Exporter une conversation\r\n  const exportConversation = (conversationId) => {\r\n    const conversation = conversations.find(conv => conv.id === conversationId);\r\n    if (!conversation) return;\r\n\r\n    const data = {\r\n      ...conversation,\r\n      exportedAt: new Date().toISOString()\r\n    };\r\n\r\n    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `conversation-esg-${conversationId}.json`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  // Importer une conversation\r\n  const importConversation = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      try {\r\n        const importedConv = JSON.parse(e.target.result);\r\n        const newConversation = {\r\n          ...importedConv,\r\n          id: Date.now().toString(),\r\n          importedAt: new Date().toISOString()\r\n        };\r\n\r\n        setConversations(prev => [newConversation, ...prev]);\r\n        setCurrentConversationId(newConversation.id);\r\n        setMessages(newConversation.messages);\r\n      } catch (error) {\r\n        alert('Erreur lors de l\\'import du fichier');\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n    event.target.value = '';\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  const formatTime = (timestamp) => {\r\n    return new Date(timestamp).toLocaleTimeString('fr-FR', {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={`chatbot-container ${theme}`}>\r\n      {/* Sidebar */}\r\n      <div className={`sidebar ${isSidebarOpen ? 'open' : 'closed'}`}>\r\n        <div className=\"sidebar-header\">\r\n          <button \r\n            className=\"new-chat-btn\"\r\n            onClick={createNewConversation}\r\n          >\r\n            <Plus size={16} />\r\n            Nouvelle discussion\r\n          </button>\r\n          \r\n          <div className=\"import-export\">\r\n            <input\r\n              type=\"file\"\r\n              id=\"import-conversation\"\r\n              accept=\".json\"\r\n              onChange={importConversation}\r\n              style={{ display: 'none' }}\r\n            />\r\n            <label htmlFor=\"import-conversation\" className=\"icon-btn\" title=\"Importer\">\r\n              <Upload size={16} />\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"conversations-list\">\r\n          {conversations.map(conversation => (\r\n            <div\r\n              key={conversation.id}\r\n              className={`conversation-item ${\r\n                currentConversationId === conversation.id ? 'active' : ''\r\n              }`}\r\n              onClick={() => switchConversation(conversation.id)}\r\n            >\r\n              <div className=\"conversation-content\">\r\n                <div className=\"conversation-title\">\r\n                  {conversation.title}\r\n                </div>\r\n                <div className=\"conversation-preview\">\r\n                  {conversation.messages.length > 0 \r\n                    ? conversation.messages[conversation.messages.length - 1]?.content.slice(0, 50) + '...'\r\n                    : 'Discussion vide'\r\n                  }\r\n                </div>\r\n                <div className=\"conversation-meta\">\r\n                  {new Date(conversation.createdAt).toLocaleDateString('fr-FR')}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"conversation-actions\">\r\n                <button\r\n                  className=\"icon-btn\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    exportConversation(conversation.id);\r\n                  }}\r\n                  title=\"Exporter\"\r\n                >\r\n                  <Download size={14} />\r\n                </button>\r\n                <button\r\n                  className=\"icon-btn delete-btn\"\r\n                  onClick={(e) => deleteConversation(conversation.id, e)}\r\n                  title=\"Supprimer\"\r\n                >\r\n                  <Trash2 size={14} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          \r\n          {conversations.length === 0 && (\r\n            <div className=\"empty-state\">\r\n              <Bot size={48} />\r\n              <p>Aucune discussion</p>\r\n              <small>Commencez une nouvelle conversation</small>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Chat Area */}\r\n      <div className=\"main-content\">\r\n        <header className=\"chat-header\">\r\n          <button \r\n            className=\"sidebar-toggle\"\r\n            onClick={() => setIsSidebarOpen(!isSidebarOpen)}\r\n          >\r\n            ☰\r\n          </button>\r\n          \r\n          <div className=\"header-title\">\r\n            {currentConversationId \r\n              ? conversations.find(c => c.id === currentConversationId)?.title || 'Discussion ESG'\r\n              : 'Assistant ESG'\r\n            }\r\n          </div>\r\n          \r\n          <button\r\n            className=\"theme-toggle\"\r\n            onClick={() => setTheme(theme === 'light' ? 'dark' : 'light')}\r\n            title={`Passer en mode ${theme === 'light' ? 'sombre' : 'clair'}`}\r\n          >\r\n            {theme === 'light' ? <Moon size={20} /> : <Sun size={20} />}\r\n          </button>\r\n        </header>\r\n\r\n        <div className=\"messages-container\">\r\n          {messages.length === 0 ? (\r\n            <div className=\"welcome-message\">\r\n              <Bot size={64} />\r\n              <h2>Assistant ESG</h2>\r\n              <p>Posez-moi des questions sur les données ESG extraites de vos documents</p>\r\n              <div className=\"suggestions\">\r\n                <button \r\n                  className=\"suggestion-btn\"\r\n                  onClick={() => setInputMessage(\"Quelles sont les émissions de CO2 les plus élevées ?\")}\r\n                >\r\n                  Quelles sont les émissions de CO2 les plus élevées ?\r\n                </button>\r\n                <button \r\n                  className=\"suggestion-btn\"\r\n                  onClick={() => setInputMessage(\"Compare les performances environnementales des entreprises\")}\r\n                >\r\n                  Compare les performances environnementales des entreprises\r\n                </button>\r\n                <button \r\n                  className=\"suggestion-btn\"\r\n                  onClick={() => setInputMessage(\"Quels sont les KPIs sociaux extraits ?\")}\r\n                >\r\n                  Quels sont les KPIs sociaux extraits ?\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            messages.map(message => (\r\n              <div key={message.id} className={`message ${message.role} ${message.isError ? 'error' : ''}`}>\r\n                <div className=\"message-avatar\">\r\n                  {message.role === 'user' ? <User size={20} /> : <Bot size={20} />}\r\n                </div>\r\n                <div className=\"message-content\">\r\n                  <div className=\"message-text\">\r\n                    {message.content.split('\\n').map((line, i) => (\r\n                      <p key={i}>{line}</p>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"message-time\">\r\n                    {formatTime(message.timestamp)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n          \r\n          {isLoading && (\r\n            <div className=\"message assistant\">\r\n              <div className=\"message-avatar\">\r\n                <Bot size={20} />\r\n              </div>\r\n              <div className=\"message-content\">\r\n                <div className=\"typing-indicator\">\r\n                  <Loader2 size={16} className=\"spinner\" />\r\n                  <span>L'assistant rédige...</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        <div className=\"input-container\">\r\n          <div className=\"input-wrapper\">\r\n            <textarea\r\n              value={inputMessage}\r\n              onChange={(e) => setInputMessage(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              placeholder=\"Posez votre question sur les données ESG...\"\r\n              rows=\"1\"\r\n              disabled={isLoading}\r\n            />\r\n            <button \r\n              className=\"send-btn\"\r\n              onClick={sendMessage}\r\n              disabled={!inputMessage.trim() || isLoading}\r\n            >\r\n              {isLoading ? <Loader2 size={20} className=\"spinner\" /> : <Send size={20} />}\r\n            </button>\r\n          </div>\r\n          <div className=\"input-footer\">\r\n            <small>Assistant ESG - Basé sur Mistral via Ollama</small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}