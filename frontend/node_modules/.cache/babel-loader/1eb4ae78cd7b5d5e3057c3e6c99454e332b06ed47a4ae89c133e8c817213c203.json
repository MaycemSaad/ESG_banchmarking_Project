{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\informasud\\\\Desktop\\\\Projets\\\\ESG_Banchmarking_Project\\\\frontend\\\\src\\\\components\\\\ConnectionTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport apiService from '../services/api';\nimport './ConnectionTest.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectionTest = () => {\n  _s();\n  const [status, setStatus] = useState('testing');\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    testConnection();\n  }, []);\n  const testConnection = async () => {\n    try {\n      setStatus('testing');\n      setMessage('Testing connection to backend...');\n      const response = await apiService.healthCheck();\n      setStatus('connected');\n      setMessage(`✅ Backend connected successfully! Server: ${response.data.message}`);\n    } catch (error) {\n      setStatus('error');\n      setMessage(`❌ Connection failed: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `connection-test ${status}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Backend Connection:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), \" \", message, status === 'error' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: testConnection,\n        className: \"retry-btn\",\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectionTest, \"mQu1IOluJbKKAFh8268EzlxX3Hs=\");\n_c = ConnectionTest;\nexport default ConnectionTest;\nvar _c;\n$RefreshReg$(_c, \"ConnectionTest\");","map":{"version":3,"names":["React","useState","useEffect","apiService","jsxDEV","_jsxDEV","ConnectionTest","_s","status","setStatus","message","setMessage","testConnection","response","healthCheck","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/informasud/Desktop/Projets/ESG_Banchmarking_Project/frontend/src/components/ConnectionTest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport apiService from '../services/api';\r\nimport './ConnectionTest.css';\r\n\r\nconst ConnectionTest = () => {\r\n  const [status, setStatus] = useState('testing');\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    testConnection();\r\n  }, []);\r\n\r\n  const testConnection = async () => {\r\n    try {\r\n      setStatus('testing');\r\n      setMessage('Testing connection to backend...');\r\n      \r\n      const response = await apiService.healthCheck();\r\n      \r\n      setStatus('connected');\r\n      setMessage(`✅ Backend connected successfully! Server: ${response.data.message}`);\r\n    } catch (error) {\r\n      setStatus('error');\r\n      setMessage(`❌ Connection failed: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`connection-test ${status}`}>\r\n      <div className=\"connection-content\">\r\n        <strong>Backend Connection:</strong> {message}\r\n        {status === 'error' && (\r\n          <button \r\n            onClick={testConnection}\r\n            className=\"retry-btn\"\r\n          >\r\n            Retry\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConnectionTest;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,SAAS,CAAC;EAC/C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACdU,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACFH,SAAS,CAAC,SAAS,CAAC;MACpBE,UAAU,CAAC,kCAAkC,CAAC;MAE9C,MAAME,QAAQ,GAAG,MAAMV,UAAU,CAACW,WAAW,CAAC,CAAC;MAE/CL,SAAS,CAAC,WAAW,CAAC;MACtBE,UAAU,CAAC,6CAA6CE,QAAQ,CAACE,IAAI,CAACL,OAAO,EAAE,CAAC;IAClF,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdP,SAAS,CAAC,OAAO,CAAC;MAClBE,UAAU,CAAC,wBAAwBK,KAAK,CAACN,OAAO,EAAE,CAAC;IACrD;EACF,CAAC;EAED,oBACEL,OAAA;IAAKY,SAAS,EAAE,mBAAmBT,MAAM,EAAG;IAAAU,QAAA,eAC1Cb,OAAA;MAAKY,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjCb,OAAA;QAAAa,QAAA,EAAQ;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACZ,OAAO,EAC5CF,MAAM,KAAK,OAAO,iBACjBH,OAAA;QACEkB,OAAO,EAAEX,cAAe;QACxBK,SAAS,EAAC,WAAW;QAAAC,QAAA,EACtB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CAtCID,cAAc;AAAAkB,EAAA,GAAdlB,cAAc;AAwCpB,eAAeA,cAAc;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}