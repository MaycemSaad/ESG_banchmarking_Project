{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\informasud\\\\Desktop\\\\Projets\\\\ESG_Banchmarking_Project\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\n// ChatbotInterface.jsx\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Send, Trash2, Moon, Sun, Plus, Bot, User, Loader2, Download, Upload, Edit3, Check, X } from 'lucide-react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  var _conversations$find;\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [theme, setTheme] = useState('dark');\n  const [conversations, setConversations] = useState([]);\n  const [currentConversationId, setCurrentConversationId] = useState(null);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [editingConversationId, setEditingConversationId] = useState(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const messagesEndRef = useRef(null);\n\n  // Charger les conversations sauvegardées au démarrage\n  useEffect(() => {\n    const savedConversations = localStorage.getItem('esg-chatbot-conversations');\n    const savedTheme = localStorage.getItem('esg-chatbot-theme');\n    const savedCurrentConv = localStorage.getItem('esg-chatbot-current');\n    if (savedConversations) {\n      const convs = JSON.parse(savedConversations);\n      setConversations(convs);\n\n      // Restaurer la conversation courante si elle existe\n      if (savedCurrentConv && convs.some(conv => conv.id === savedCurrentConv)) {\n        setCurrentConversationId(savedCurrentConv);\n        const currentConv = convs.find(conv => conv.id === savedCurrentConv);\n        setMessages((currentConv === null || currentConv === void 0 ? void 0 : currentConv.messages) || []);\n      } else if (convs.length > 0) {\n        setCurrentConversationId(convs[0].id);\n        setMessages(convs[0].messages);\n      }\n    }\n    if (savedTheme) {\n      setTheme(savedTheme);\n    }\n  }, []);\n\n  // Sauvegarder les conversations et la conversation courante\n  useEffect(() => {\n    localStorage.setItem('esg-chatbot-conversations', JSON.stringify(conversations));\n    if (currentConversationId) {\n      localStorage.setItem('esg-chatbot-current', currentConversationId);\n    }\n  }, [conversations, currentConversationId]);\n\n  // Sauvegarder le thème\n  useEffect(() => {\n    localStorage.setItem('esg-chatbot-theme', theme);\n    document.body.setAttribute('data-theme', theme);\n  }, [theme]);\n\n  // Scroll vers le bas\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // Générer un titre basé sur le premier message\n  const generateConversationTitle = firstMessage => {\n    const message = firstMessage.content.trim();\n    if (message.length <= 30) {\n      return message;\n    }\n    return message.slice(0, 30) + '...';\n  };\n\n  // Créer une nouvelle conversation\n  const createNewConversation = () => {\n    const newConversation = {\n      id: Date.now().toString(),\n      title: 'Nouvelle discussion',\n      messages: [],\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    setConversations(prev => [newConversation, ...prev]);\n    setCurrentConversationId(newConversation.id);\n    setMessages([]);\n    setEditingConversationId(newConversation.id);\n    setEditingTitle('Nouvelle discussion');\n  };\n\n  // Supprimer une conversation\n  const deleteConversation = (conversationId, e) => {\n    e.stopPropagation();\n    const updatedConversations = conversations.filter(conv => conv.id !== conversationId);\n    setConversations(updatedConversations);\n    if (currentConversationId === conversationId) {\n      if (updatedConversations.length > 0) {\n        setCurrentConversationId(updatedConversations[0].id);\n        setMessages(updatedConversations[0].messages);\n      } else {\n        setCurrentConversationId(null);\n        setMessages([]);\n      }\n    }\n  };\n\n  // Changer de conversation\n  const switchConversation = conversationId => {\n    const conversation = conversations.find(conv => conv.id === conversationId);\n    if (conversation) {\n      setCurrentConversationId(conversationId);\n      setMessages(conversation.messages);\n      setEditingConversationId(null); // Annuler l'édition en cours\n    }\n  };\n\n  // Commencer l'édition du titre\n  const startEditingTitle = (conversationId, currentTitle, e) => {\n    e.stopPropagation();\n    setEditingConversationId(conversationId);\n    setEditingTitle(currentTitle);\n  };\n\n  // Sauvegarder le titre édité\n  const saveEditedTitle = (conversationId, e) => {\n    e.stopPropagation();\n    if (editingTitle.trim()) {\n      setConversations(prev => prev.map(conv => conv.id === conversationId ? {\n        ...conv,\n        title: editingTitle.trim(),\n        updatedAt: new Date().toISOString()\n      } : conv));\n    }\n    setEditingConversationId(null);\n    setEditingTitle('');\n  };\n\n  // Annuler l'édition\n  const cancelEditing = e => {\n    e.stopPropagation();\n    setEditingConversationId(null);\n    setEditingTitle('');\n  };\n\n  // Envoyer un message\n  const sendMessage = async () => {\n    if (!inputMessage.trim() || isLoading) return;\n    const userMessage = {\n      id: Date.now().toString(),\n      content: inputMessage,\n      role: 'user',\n      timestamp: new Date().toISOString()\n    };\n\n    // Si pas de conversation active, en créer une\n    let conversationId = currentConversationId;\n    let updatedMessages = [];\n    if (!conversationId) {\n      const newConv = {\n        id: Date.now().toString(),\n        title: generateConversationTitle(userMessage),\n        messages: [userMessage],\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      setConversations(prev => [newConv, ...prev]);\n      setCurrentConversationId(newConv.id);\n      setMessages([userMessage]);\n      conversationId = newConv.id;\n      updatedMessages = [userMessage];\n    } else {\n      updatedMessages = [...messages, userMessage];\n      setMessages(updatedMessages);\n    }\n    setInputMessage('');\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost:5000/api/chatbot/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question: inputMessage,\n          conversation_id: conversationId\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Erreur lors de la requête');\n      }\n      const data = await response.json();\n      const botMessage = {\n        id: (Date.now() + 1).toString(),\n        content: data.response,\n        role: 'assistant',\n        timestamp: new Date().toISOString()\n      };\n      const finalMessages = [...updatedMessages, botMessage];\n      setMessages(finalMessages);\n\n      // Mettre à jour la conversation avec la réponse\n      setConversations(prev => prev.map(conv => conv.id === conversationId ? {\n        ...conv,\n        messages: finalMessages,\n        // Mettre à jour le titre seulement si c'est la première réponse\n        title: conv.messages.length === 0 ? generateConversationTitle(userMessage) : conv.title,\n        updatedAt: new Date().toISOString()\n      } : conv));\n    } catch (error) {\n      console.error('Erreur:', error);\n      const errorMessage = {\n        id: (Date.now() + 1).toString(),\n        content: 'Désolé, une erreur est survenue. Veuillez réessayer.',\n        role: 'assistant',\n        timestamp: new Date().toISOString(),\n        isError: true\n      };\n      const finalMessages = [...updatedMessages, errorMessage];\n      setMessages(finalMessages);\n      setConversations(prev => prev.map(conv => conv.id === conversationId ? {\n        ...conv,\n        messages: finalMessages,\n        updatedAt: new Date().toISOString()\n      } : conv));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Exporter une conversation\n  const exportConversation = conversationId => {\n    const conversation = conversations.find(conv => conv.id === conversationId);\n    if (!conversation) return;\n    const data = {\n      ...conversation,\n      exportedAt: new Date().toISOString()\n    };\n    const blob = new Blob([JSON.stringify(data, null, 2)], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `conversation-esg-${conversation.title.replace(/[^a-z0-9]/gi, '_').toLowerCase()}.json`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // Importer une conversation\n  const importConversation = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const importedConv = JSON.parse(e.target.result);\n        const newConversation = {\n          ...importedConv,\n          id: Date.now().toString(),\n          importedAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString()\n        };\n        setConversations(prev => [newConversation, ...prev]);\n        setCurrentConversationId(newConversation.id);\n        setMessages(newConversation.messages);\n      } catch (error) {\n        alert('Erreur lors de l\\'import du fichier');\n      }\n    };\n    reader.readAsText(file);\n    event.target.value = '';\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  const handleTitleKeyPress = (e, conversationId) => {\n    if (e.key === 'Enter') {\n      saveEditedTitle(conversationId, e);\n    } else if (e.key === 'Escape') {\n      cancelEditing(e);\n    }\n  };\n  const formatTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString('fr-FR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const formatDate = timestamp => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffTime = Math.abs(now - date);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    if (diffDays === 1) {\n      return 'Hier';\n    } else if (diffDays <= 7) {\n      return date.toLocaleDateString('fr-FR', {\n        weekday: 'long'\n      });\n    } else {\n      return date.toLocaleDateString('fr-FR');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chatbot-container ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${isSidebarOpen ? 'open' : 'closed'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-chat-btn\",\n          onClick: createNewConversation,\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), \"Nouvelle discussion\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"import-export\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"import-conversation\",\n            accept: \".json\",\n            onChange: importConversation,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"import-conversation\",\n            className: \"icon-btn\",\n            title: \"Importer\",\n            children: /*#__PURE__*/_jsxDEV(Upload, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversations-list\",\n        children: [conversations.map(conversation => {\n          var _conversation$message, _conversation$message2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `conversation-item ${currentConversationId === conversation.id ? 'active' : ''}`,\n            onClick: () => switchConversation(conversation.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"conversation-header\",\n                children: editingConversationId === conversation.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"title-editing\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: editingTitle,\n                    onChange: e => setEditingTitle(e.target.value),\n                    onKeyPress: e => handleTitleKeyPress(e, conversation.id),\n                    onBlur: e => saveEditedTitle(conversation.id, e),\n                    autoFocus: true,\n                    className: \"title-input\",\n                    onClick: e => e.stopPropagation()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"editing-actions\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"icon-btn confirm-btn\",\n                      onClick: e => saveEditedTitle(conversation.id, e),\n                      title: \"Sauvegarder\",\n                      children: /*#__PURE__*/_jsxDEV(Check, {\n                        size: 12\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 418,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 413,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"icon-btn cancel-btn\",\n                      onClick: cancelEditing,\n                      title: \"Annuler\",\n                      children: /*#__PURE__*/_jsxDEV(X, {\n                        size: 12\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 425,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 420,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"conversation-title\",\n                  children: conversation.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"conversation-preview\",\n                children: conversation.messages.length > 0 ? ((_conversation$message = conversation.messages[conversation.messages.length - 1]) === null || _conversation$message === void 0 ? void 0 : _conversation$message.content.slice(0, 50)) + (((_conversation$message2 = conversation.messages[conversation.messages.length - 1]) === null || _conversation$message2 === void 0 ? void 0 : _conversation$message2.content.length) > 50 ? '...' : '') : 'Discussion vide'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"conversation-meta\",\n                children: [formatDate(conversation.updatedAt), \" \\u2022 \", conversation.messages.length, \" messages\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-actions\",\n              children: editingConversationId !== conversation.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"icon-btn\",\n                  onClick: e => startEditingTitle(conversation.id, conversation.title, e),\n                  title: \"Renommer\",\n                  children: /*#__PURE__*/_jsxDEV(Edit3, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 454,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"icon-btn\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    exportConversation(conversation.id);\n                  },\n                  title: \"Exporter\",\n                  children: /*#__PURE__*/_jsxDEV(Download, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"icon-btn delete-btn\",\n                  onClick: e => deleteConversation(conversation.id, e),\n                  title: \"Supprimer\",\n                  children: /*#__PURE__*/_jsxDEV(Trash2, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 471,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this)]\n          }, conversation.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this);\n        }), conversations.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: [/*#__PURE__*/_jsxDEV(Bot, {\n            size: 48\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Aucune discussion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Commencez une nouvelle conversation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sidebar-toggle\",\n          onClick: () => setIsSidebarOpen(!isSidebarOpen),\n          children: \"\\u2630\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-title\",\n          children: currentConversationId ? ((_conversations$find = conversations.find(c => c.id === currentConversationId)) === null || _conversations$find === void 0 ? void 0 : _conversations$find.title) || 'Discussion ESG' : 'Assistant ESG'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"theme-toggle\",\n          onClick: () => setTheme(theme === 'light' ? 'dark' : 'light'),\n          title: `Passer en mode ${theme === 'light' ? 'sombre' : 'clair'}`,\n          children: theme === 'light' ? /*#__PURE__*/_jsxDEV(Moon, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(Sun, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container\",\n        children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-message\",\n          children: [/*#__PURE__*/_jsxDEV(Bot, {\n            size: 64\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Assistant ESG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Posez-moi des questions sur les donn\\xE9es ESG extraites de vos documents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"suggestion-btn\",\n              onClick: () => setInputMessage(\"Quelles sont les émissions de CO2 les plus élevées ?\"),\n              children: \"Quelles sont les \\xE9missions de CO2 les plus \\xE9lev\\xE9es ?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"suggestion-btn\",\n              onClick: () => setInputMessage(\"Compare les performances environnementales des entreprises\"),\n              children: \"Compare les performances environnementales des entreprises\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"suggestion-btn\",\n              onClick: () => setInputMessage(\"Quels sont les KPIs sociaux extraits ?\"),\n              children: \"Quels sont les KPIs sociaux extraits ?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 13\n        }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.role} ${message.isError ? 'error' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: message.role === 'user' ? /*#__PURE__*/_jsxDEV(User, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 46\n            }, this) : /*#__PURE__*/_jsxDEV(Bot, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              children: message.content.split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: line\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-time\",\n              children: formatTime(message.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 17\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 15\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message assistant\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: /*#__PURE__*/_jsxDEV(Bot, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(Loader2, {\n                size: 16,\n                className: \"spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"L'assistant r\\xE9dige...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: \"Posez votre question sur les donn\\xE9es ESG...\",\n            rows: \"1\",\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send-btn\",\n            onClick: sendMessage,\n            disabled: !inputMessage.trim() || isLoading,\n            children: isLoading ? /*#__PURE__*/_jsxDEV(Loader2, {\n              size: 20,\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(Send, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 72\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Assistant ESG - Bas\\xE9 sur Mistral via Ollama\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"CvNphubwyOSH9IvVqTX5a1iG4KM=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Send","Trash2","Moon","Sun","Plus","Bot","User","Loader2","Download","Upload","Edit3","Check","X","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbot","_s","_conversations$find","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","theme","setTheme","conversations","setConversations","currentConversationId","setCurrentConversationId","isSidebarOpen","setIsSidebarOpen","editingConversationId","setEditingConversationId","editingTitle","setEditingTitle","messagesEndRef","savedConversations","localStorage","getItem","savedTheme","savedCurrentConv","convs","JSON","parse","some","conv","id","currentConv","find","length","setItem","stringify","document","body","setAttribute","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","generateConversationTitle","firstMessage","message","content","trim","slice","createNewConversation","newConversation","Date","now","toString","title","createdAt","toISOString","updatedAt","prev","deleteConversation","conversationId","e","stopPropagation","updatedConversations","filter","switchConversation","conversation","startEditingTitle","currentTitle","saveEditedTitle","map","cancelEditing","sendMessage","userMessage","role","timestamp","updatedMessages","newConv","response","fetch","method","headers","question","conversation_id","ok","Error","data","json","botMessage","finalMessages","error","console","errorMessage","isError","exportConversation","exportedAt","blob","Blob","type","url","URL","createObjectURL","a","createElement","href","download","replace","toLowerCase","appendChild","click","removeChild","revokeObjectURL","importConversation","event","file","target","files","reader","FileReader","onload","importedConv","result","importedAt","alert","readAsText","value","handleKeyPress","key","shiftKey","preventDefault","handleTitleKeyPress","formatTime","toLocaleTimeString","hour","minute","formatDate","date","diffTime","Math","abs","diffDays","ceil","toLocaleDateString","weekday","className","children","onClick","size","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","style","display","htmlFor","_conversation$message","_conversation$message2","onKeyPress","onBlur","autoFocus","c","split","line","i","ref","placeholder","rows","disabled","_c","$RefreshReg$"],"sources":["C:/Users/informasud/Desktop/Projets/ESG_Banchmarking_Project/frontend/src/components/Chatbot.js"],"sourcesContent":["// ChatbotInterface.jsx\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { \r\n  Send, \r\n  Trash2, \r\n  Moon, \r\n  Sun, \r\n  Plus,\r\n  Bot, \r\n  User,\r\n  Loader2,\r\n  Download,\r\n  Upload,\r\n  Edit3,\r\n  Check,\r\n  X\r\n} from 'lucide-react';\r\nimport './Chatbot.css';\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [theme, setTheme] = useState('dark');\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentConversationId, setCurrentConversationId] = useState(null);\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const [editingConversationId, setEditingConversationId] = useState(null);\r\n  const [editingTitle, setEditingTitle] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Charger les conversations sauvegardées au démarrage\r\n  useEffect(() => {\r\n    const savedConversations = localStorage.getItem('esg-chatbot-conversations');\r\n    const savedTheme = localStorage.getItem('esg-chatbot-theme');\r\n    const savedCurrentConv = localStorage.getItem('esg-chatbot-current');\r\n    \r\n    if (savedConversations) {\r\n      const convs = JSON.parse(savedConversations);\r\n      setConversations(convs);\r\n      \r\n      // Restaurer la conversation courante si elle existe\r\n      if (savedCurrentConv && convs.some(conv => conv.id === savedCurrentConv)) {\r\n        setCurrentConversationId(savedCurrentConv);\r\n        const currentConv = convs.find(conv => conv.id === savedCurrentConv);\r\n        setMessages(currentConv?.messages || []);\r\n      } else if (convs.length > 0) {\r\n        setCurrentConversationId(convs[0].id);\r\n        setMessages(convs[0].messages);\r\n      }\r\n    }\r\n    \r\n    if (savedTheme) {\r\n      setTheme(savedTheme);\r\n    }\r\n  }, []);\r\n\r\n  // Sauvegarder les conversations et la conversation courante\r\n  useEffect(() => {\r\n    localStorage.setItem('esg-chatbot-conversations', JSON.stringify(conversations));\r\n    if (currentConversationId) {\r\n      localStorage.setItem('esg-chatbot-current', currentConversationId);\r\n    }\r\n  }, [conversations, currentConversationId]);\r\n\r\n  // Sauvegarder le thème\r\n  useEffect(() => {\r\n    localStorage.setItem('esg-chatbot-theme', theme);\r\n    document.body.setAttribute('data-theme', theme);\r\n  }, [theme]);\r\n\r\n  // Scroll vers le bas\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  // Générer un titre basé sur le premier message\r\n  const generateConversationTitle = (firstMessage) => {\r\n    const message = firstMessage.content.trim();\r\n    if (message.length <= 30) {\r\n      return message;\r\n    }\r\n    return message.slice(0, 30) + '...';\r\n  };\r\n\r\n  // Créer une nouvelle conversation\r\n  const createNewConversation = () => {\r\n    const newConversation = {\r\n      id: Date.now().toString(),\r\n      title: 'Nouvelle discussion',\r\n      messages: [],\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString()\r\n    };\r\n    \r\n    setConversations(prev => [newConversation, ...prev]);\r\n    setCurrentConversationId(newConversation.id);\r\n    setMessages([]);\r\n    setEditingConversationId(newConversation.id);\r\n    setEditingTitle('Nouvelle discussion');\r\n  };\r\n\r\n  // Supprimer une conversation\r\n  const deleteConversation = (conversationId, e) => {\r\n    e.stopPropagation();\r\n    const updatedConversations = conversations.filter(conv => conv.id !== conversationId);\r\n    setConversations(updatedConversations);\r\n    \r\n    if (currentConversationId === conversationId) {\r\n      if (updatedConversations.length > 0) {\r\n        setCurrentConversationId(updatedConversations[0].id);\r\n        setMessages(updatedConversations[0].messages);\r\n      } else {\r\n        setCurrentConversationId(null);\r\n        setMessages([]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Changer de conversation\r\n  const switchConversation = (conversationId) => {\r\n    const conversation = conversations.find(conv => conv.id === conversationId);\r\n    if (conversation) {\r\n      setCurrentConversationId(conversationId);\r\n      setMessages(conversation.messages);\r\n      setEditingConversationId(null); // Annuler l'édition en cours\r\n    }\r\n  };\r\n\r\n  // Commencer l'édition du titre\r\n  const startEditingTitle = (conversationId, currentTitle, e) => {\r\n    e.stopPropagation();\r\n    setEditingConversationId(conversationId);\r\n    setEditingTitle(currentTitle);\r\n  };\r\n\r\n  // Sauvegarder le titre édité\r\n  const saveEditedTitle = (conversationId, e) => {\r\n    e.stopPropagation();\r\n    if (editingTitle.trim()) {\r\n      setConversations(prev => \r\n        prev.map(conv => \r\n          conv.id === conversationId \r\n            ? { \r\n                ...conv, \r\n                title: editingTitle.trim(),\r\n                updatedAt: new Date().toISOString()\r\n              } \r\n            : conv\r\n        )\r\n      );\r\n    }\r\n    setEditingConversationId(null);\r\n    setEditingTitle('');\r\n  };\r\n\r\n  // Annuler l'édition\r\n  const cancelEditing = (e) => {\r\n    e.stopPropagation();\r\n    setEditingConversationId(null);\r\n    setEditingTitle('');\r\n  };\r\n\r\n  // Envoyer un message\r\n  const sendMessage = async () => {\r\n    if (!inputMessage.trim() || isLoading) return;\r\n\r\n    const userMessage = {\r\n      id: Date.now().toString(),\r\n      content: inputMessage,\r\n      role: 'user',\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    // Si pas de conversation active, en créer une\r\n    let conversationId = currentConversationId;\r\n    let updatedMessages = [];\r\n\r\n    if (!conversationId) {\r\n      const newConv = {\r\n        id: Date.now().toString(),\r\n        title: generateConversationTitle(userMessage),\r\n        messages: [userMessage],\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString()\r\n      };\r\n      setConversations(prev => [newConv, ...prev]);\r\n      setCurrentConversationId(newConv.id);\r\n      setMessages([userMessage]);\r\n      conversationId = newConv.id;\r\n      updatedMessages = [userMessage];\r\n    } else {\r\n      updatedMessages = [...messages, userMessage];\r\n      setMessages(updatedMessages);\r\n    }\r\n\r\n    setInputMessage('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/chatbot/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          question: inputMessage,\r\n          conversation_id: conversationId\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Erreur lors de la requête');\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      const botMessage = {\r\n        id: (Date.now() + 1).toString(),\r\n        content: data.response,\r\n        role: 'assistant',\r\n        timestamp: new Date().toISOString()\r\n      };\r\n\r\n      const finalMessages = [...updatedMessages, botMessage];\r\n      setMessages(finalMessages);\r\n\r\n      // Mettre à jour la conversation avec la réponse\r\n      setConversations(prev => \r\n        prev.map(conv => \r\n          conv.id === conversationId \r\n            ? { \r\n                ...conv, \r\n                messages: finalMessages,\r\n                // Mettre à jour le titre seulement si c'est la première réponse\r\n                title: conv.messages.length === 0 ? generateConversationTitle(userMessage) : conv.title,\r\n                updatedAt: new Date().toISOString()\r\n              }\r\n            : conv\r\n        )\r\n      );\r\n\r\n    } catch (error) {\r\n      console.error('Erreur:', error);\r\n      \r\n      const errorMessage = {\r\n        id: (Date.now() + 1).toString(),\r\n        content: 'Désolé, une erreur est survenue. Veuillez réessayer.',\r\n        role: 'assistant',\r\n        timestamp: new Date().toISOString(),\r\n        isError: true\r\n      };\r\n\r\n      const finalMessages = [...updatedMessages, errorMessage];\r\n      setMessages(finalMessages);\r\n\r\n      setConversations(prev => \r\n        prev.map(conv => \r\n          conv.id === conversationId \r\n            ? { \r\n                ...conv, \r\n                messages: finalMessages,\r\n                updatedAt: new Date().toISOString()\r\n              }\r\n            : conv\r\n        )\r\n      );\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Exporter une conversation\r\n  const exportConversation = (conversationId) => {\r\n    const conversation = conversations.find(conv => conv.id === conversationId);\r\n    if (!conversation) return;\r\n\r\n    const data = {\r\n      ...conversation,\r\n      exportedAt: new Date().toISOString()\r\n    };\r\n\r\n    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `conversation-esg-${conversation.title.replace(/[^a-z0-9]/gi, '_').toLowerCase()}.json`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  // Importer une conversation\r\n  const importConversation = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      try {\r\n        const importedConv = JSON.parse(e.target.result);\r\n        const newConversation = {\r\n          ...importedConv,\r\n          id: Date.now().toString(),\r\n          importedAt: new Date().toISOString(),\r\n          updatedAt: new Date().toISOString()\r\n        };\r\n\r\n        setConversations(prev => [newConversation, ...prev]);\r\n        setCurrentConversationId(newConversation.id);\r\n        setMessages(newConversation.messages);\r\n      } catch (error) {\r\n        alert('Erreur lors de l\\'import du fichier');\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n    event.target.value = '';\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  const handleTitleKeyPress = (e, conversationId) => {\r\n    if (e.key === 'Enter') {\r\n      saveEditedTitle(conversationId, e);\r\n    } else if (e.key === 'Escape') {\r\n      cancelEditing(e);\r\n    }\r\n  };\r\n\r\n  const formatTime = (timestamp) => {\r\n    return new Date(timestamp).toLocaleTimeString('fr-FR', {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const formatDate = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const now = new Date();\r\n    const diffTime = Math.abs(now - date);\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    \r\n    if (diffDays === 1) {\r\n      return 'Hier';\r\n    } else if (diffDays <= 7) {\r\n      return date.toLocaleDateString('fr-FR', { weekday: 'long' });\r\n    } else {\r\n      return date.toLocaleDateString('fr-FR');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`chatbot-container ${theme}`}>\r\n      {/* Sidebar */}\r\n      <div className={`sidebar ${isSidebarOpen ? 'open' : 'closed'}`}>\r\n        <div className=\"sidebar-header\">\r\n          <button \r\n            className=\"new-chat-btn\"\r\n            onClick={createNewConversation}\r\n          >\r\n            <Plus size={16} />\r\n            Nouvelle discussion\r\n          </button>\r\n          \r\n          <div className=\"import-export\">\r\n            <input\r\n              type=\"file\"\r\n              id=\"import-conversation\"\r\n              accept=\".json\"\r\n              onChange={importConversation}\r\n              style={{ display: 'none' }}\r\n            />\r\n            <label htmlFor=\"import-conversation\" className=\"icon-btn\" title=\"Importer\">\r\n              <Upload size={16} />\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"conversations-list\">\r\n          {conversations.map(conversation => (\r\n            <div\r\n              key={conversation.id}\r\n              className={`conversation-item ${\r\n                currentConversationId === conversation.id ? 'active' : ''\r\n              }`}\r\n              onClick={() => switchConversation(conversation.id)}\r\n            >\r\n              <div className=\"conversation-content\">\r\n                <div className=\"conversation-header\">\r\n                  {editingConversationId === conversation.id ? (\r\n                    <div className=\"title-editing\">\r\n                      <input\r\n                        type=\"text\"\r\n                        value={editingTitle}\r\n                        onChange={(e) => setEditingTitle(e.target.value)}\r\n                        onKeyPress={(e) => handleTitleKeyPress(e, conversation.id)}\r\n                        onBlur={(e) => saveEditedTitle(conversation.id, e)}\r\n                        autoFocus\r\n                        className=\"title-input\"\r\n                        onClick={(e) => e.stopPropagation()}\r\n                      />\r\n                      <div className=\"editing-actions\">\r\n                        <button\r\n                          className=\"icon-btn confirm-btn\"\r\n                          onClick={(e) => saveEditedTitle(conversation.id, e)}\r\n                          title=\"Sauvegarder\"\r\n                        >\r\n                          <Check size={12} />\r\n                        </button>\r\n                        <button\r\n                          className=\"icon-btn cancel-btn\"\r\n                          onClick={cancelEditing}\r\n                          title=\"Annuler\"\r\n                        >\r\n                          <X size={12} />\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"conversation-title\">\r\n                      {conversation.title}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"conversation-preview\">\r\n                  {conversation.messages.length > 0 \r\n                    ? conversation.messages[conversation.messages.length - 1]?.content.slice(0, 50) + (conversation.messages[conversation.messages.length - 1]?.content.length > 50 ? '...' : '')\r\n                    : 'Discussion vide'\r\n                  }\r\n                </div>\r\n                <div className=\"conversation-meta\">\r\n                  {formatDate(conversation.updatedAt)} • {conversation.messages.length} messages\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"conversation-actions\">\r\n                {editingConversationId !== conversation.id && (\r\n                  <>\r\n                    <button\r\n                      className=\"icon-btn\"\r\n                      onClick={(e) => startEditingTitle(conversation.id, conversation.title, e)}\r\n                      title=\"Renommer\"\r\n                    >\r\n                      <Edit3 size={14} />\r\n                    </button>\r\n                    <button\r\n                      className=\"icon-btn\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        exportConversation(conversation.id);\r\n                      }}\r\n                      title=\"Exporter\"\r\n                    >\r\n                      <Download size={14} />\r\n                    </button>\r\n                    <button\r\n                      className=\"icon-btn delete-btn\"\r\n                      onClick={(e) => deleteConversation(conversation.id, e)}\r\n                      title=\"Supprimer\"\r\n                    >\r\n                      <Trash2 size={14} />\r\n                    </button>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          \r\n          {conversations.length === 0 && (\r\n            <div className=\"empty-state\">\r\n              <Bot size={48} />\r\n              <p>Aucune discussion</p>\r\n              <small>Commencez une nouvelle conversation</small>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Chat Area */}\r\n      <div className=\"main-content\">\r\n        <header className=\"chat-header\">\r\n          <button \r\n            className=\"sidebar-toggle\"\r\n            onClick={() => setIsSidebarOpen(!isSidebarOpen)}\r\n          >\r\n            ☰\r\n          </button>\r\n          \r\n          <div className=\"header-title\">\r\n            {currentConversationId \r\n              ? conversations.find(c => c.id === currentConversationId)?.title || 'Discussion ESG'\r\n              : 'Assistant ESG'\r\n            }\r\n          </div>\r\n          \r\n          <button\r\n            className=\"theme-toggle\"\r\n            onClick={() => setTheme(theme === 'light' ? 'dark' : 'light')}\r\n            title={`Passer en mode ${theme === 'light' ? 'sombre' : 'clair'}`}\r\n          >\r\n            {theme === 'light' ? <Moon size={20} /> : <Sun size={20} />}\r\n          </button>\r\n        </header>\r\n\r\n        <div className=\"messages-container\">\r\n          {messages.length === 0 ? (\r\n            <div className=\"welcome-message\">\r\n              <Bot size={64} />\r\n              <h2>Assistant ESG</h2>\r\n              <p>Posez-moi des questions sur les données ESG extraites de vos documents</p>\r\n              <div className=\"suggestions\">\r\n                <button \r\n                  className=\"suggestion-btn\"\r\n                  onClick={() => setInputMessage(\"Quelles sont les émissions de CO2 les plus élevées ?\")}\r\n                >\r\n                  Quelles sont les émissions de CO2 les plus élevées ?\r\n                </button>\r\n                <button \r\n                  className=\"suggestion-btn\"\r\n                  onClick={() => setInputMessage(\"Compare les performances environnementales des entreprises\")}\r\n                >\r\n                  Compare les performances environnementales des entreprises\r\n                </button>\r\n                <button \r\n                  className=\"suggestion-btn\"\r\n                  onClick={() => setInputMessage(\"Quels sont les KPIs sociaux extraits ?\")}\r\n                >\r\n                  Quels sont les KPIs sociaux extraits ?\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            messages.map(message => (\r\n              <div key={message.id} className={`message ${message.role} ${message.isError ? 'error' : ''}`}>\r\n                <div className=\"message-avatar\">\r\n                  {message.role === 'user' ? <User size={20} /> : <Bot size={20} />}\r\n                </div>\r\n                <div className=\"message-content\">\r\n                  <div className=\"message-text\">\r\n                    {message.content.split('\\n').map((line, i) => (\r\n                      <p key={i}>{line}</p>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"message-time\">\r\n                    {formatTime(message.timestamp)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n          \r\n          {isLoading && (\r\n            <div className=\"message assistant\">\r\n              <div className=\"message-avatar\">\r\n                <Bot size={20} />\r\n              </div>\r\n              <div className=\"message-content\">\r\n                <div className=\"typing-indicator\">\r\n                  <Loader2 size={16} className=\"spinner\" />\r\n                  <span>L'assistant rédige...</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        <div className=\"input-container\">\r\n          <div className=\"input-wrapper\">\r\n            <textarea\r\n              value={inputMessage}\r\n              onChange={(e) => setInputMessage(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              placeholder=\"Posez votre question sur les données ESG...\"\r\n              rows=\"1\"\r\n              disabled={isLoading}\r\n            />\r\n            <button \r\n              className=\"send-btn\"\r\n              onClick={sendMessage}\r\n              disabled={!inputMessage.trim() || isLoading}\r\n            >\r\n              {isLoading ? <Loader2 size={20} className=\"spinner\" /> : <Send size={20} />}\r\n            </button>\r\n          </div>\r\n          <div className=\"input-footer\">\r\n            <small>Assistant ESG - Basé sur Mistral via Ollama</small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}