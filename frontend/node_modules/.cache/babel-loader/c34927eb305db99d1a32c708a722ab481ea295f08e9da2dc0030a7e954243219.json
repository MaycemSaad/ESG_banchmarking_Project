{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\informasud\\\\Desktop\\\\Projets\\\\ESG_Banchmarking_Project\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Send, Bot, User, Trash2, Plus, MessageSquare } from 'lucide-react';\nimport apiService from '../services/api';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = ({\n  darkMode\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [conversations, setConversations] = useState([]);\n  const [currentConversationId, setCurrentConversationId] = useState(null);\n  const [selectedCompany, setSelectedCompany] = useState('');\n  const [companies, setCompanies] = useState([]);\n  const messagesEndRef = useRef(null);\n\n  // Charger les entreprises disponibles\n  useEffect(() => {\n    loadCompanies();\n    loadConversations();\n  }, []);\n\n  // Scroll vers le bas à chaque nouveau message\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const loadCompanies = async () => {\n    try {\n      const response = await apiService.getCompanies();\n      setCompanies(response.data);\n    } catch (error) {\n      console.error('Erreur chargement entreprises:', error);\n    }\n  };\n  const loadConversations = () => {\n    // Pour l'instant, on simule des conversations\n    // Plus tard, vous pourrez les stocker dans localStorage ou une base de données\n    const savedConversations = JSON.parse(localStorage.getItem('esg_conversations') || '[]');\n    setConversations(savedConversations);\n  };\n  const saveConversations = conversations => {\n    localStorage.setItem('esg_conversations', JSON.stringify(conversations));\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const startNewConversation = () => {\n    const newConversationId = `conv_${Date.now()}`;\n    const newConversation = {\n      id: newConversationId,\n      title: 'Nouvelle discussion',\n      createdAt: new Date().toISOString(),\n      messages: []\n    };\n    setConversations(prev => {\n      const updated = [newConversation, ...prev];\n      saveConversations(updated);\n      return updated;\n    });\n    setCurrentConversationId(newConversationId);\n    setMessages([]);\n    setInputMessage('');\n    setSelectedCompany('');\n  };\n  const selectConversation = conversationId => {\n    const conversation = conversations.find(c => c.id === conversationId);\n    if (conversation) {\n      setCurrentConversationId(conversationId);\n      setMessages(conversation.messages);\n    }\n  };\n  const deleteConversation = (conversationId, e) => {\n    e.stopPropagation();\n    const updatedConversations = conversations.filter(c => c.id !== conversationId);\n    setConversations(updatedConversations);\n    saveConversations(updatedConversations);\n    if (currentConversationId === conversationId) {\n      startNewConversation();\n    }\n  };\n  const sendMessage = async () => {\n    if (!inputMessage.trim() || isLoading) return;\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      content: inputMessage,\n      timestamp: new Date().toISOString()\n    };\n\n    // Ajouter le message utilisateur\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    setInputMessage('');\n    setIsLoading(true);\n    try {\n      // Appeler l'API du chatbot ESG\n      const response = await apiService.esgChat(inputMessage, selectedCompany);\n      const botMessage = {\n        id: Date.now() + 1,\n        type: 'bot',\n        content: response.data.response,\n        timestamp: new Date().toISOString(),\n        metadata: {\n          company: response.data.company,\n          aiUsed: response.data.ai_used\n        }\n      };\n      const finalMessages = [...updatedMessages, botMessage];\n      setMessages(finalMessages);\n\n      // Mettre à jour la conversation\n      if (currentConversationId) {\n        const updatedConversations = conversations.map(conv => {\n          if (conv.id === currentConversationId) {\n            return {\n              ...conv,\n              title: conv.title === 'Nouvelle discussion' ? inputMessage.slice(0, 30) + (inputMessage.length > 30 ? '...' : '') : conv.title,\n              messages: finalMessages\n            };\n          }\n          return conv;\n        });\n        setConversations(updatedConversations);\n        saveConversations(updatedConversations);\n      }\n    } catch (error) {\n      console.error('Erreur envoi message:', error);\n      const errorMessage = {\n        id: Date.now() + 1,\n        type: 'bot',\n        content: \"Désolé, une erreur s'est produite. Veuillez réessayer.\",\n        timestamp: new Date().toISOString(),\n        isError: true\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  const formatMessage = content => {\n    // Convertir les retours à la ligne en <br />\n    return content.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [line, index < content.split('\\n').length - 1 && /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 52\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this));\n  };\n  const getQuickActions = () => [{\n    label: \"Analyser nos performances ESG\",\n    prompt: \"Analyse nos performances ESG globales et identifie nos points forts et axes d'amélioration\"\n  }, {\n    label: \"Comparer avec le secteur\",\n    prompt: \"Comment se positionne notre entreprise par rapport aux standards du secteur ?\"\n  }, {\n    label: \"Recommandations d'amélioration\",\n    prompt: \"Quelles sont tes recommandations prioritaires pour améliorer notre score ESG ?\"\n  }, {\n    label: \"Rapport de conformité\",\n    prompt: \"Évalue notre conformité aux réglementations ESG actuelles et futures\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chatbot-container ${darkMode ? 'dark' : 'light'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversations-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Discussions ESG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-chat-btn\",\n            onClick: startNewConversation,\n            title: \"Nouvelle discussion\",\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conversations-list\",\n          children: [conversations.map(conversation => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `conversation-item ${currentConversationId === conversation.id ? 'active' : ''}`,\n            onClick: () => selectConversation(conversation.id),\n            children: [/*#__PURE__*/_jsxDEV(MessageSquare, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"conversation-title\",\n              children: conversation.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-conversation\",\n              onClick: e => deleteConversation(conversation.id, e),\n              title: \"Supprimer\",\n              children: /*#__PURE__*/_jsxDEV(Trash2, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)]\n          }, conversation.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)), conversations.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-conversations\",\n            children: [/*#__PURE__*/_jsxDEV(MessageSquare, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Aucune discussion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"start-chat-btn\",\n              onClick: startNewConversation,\n              children: \"Commencer une discussion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-left\",\n            children: [/*#__PURE__*/_jsxDEV(Bot, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Assistant ESG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"company-selector\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedCompany,\n              onChange: e => setSelectedCompany(e.target.value),\n              className: \"company-dropdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Toutes les entreprises\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this), companies.map(company => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: company,\n                children: company\n              }, company, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"welcome-screen\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"welcome-icon\",\n              children: /*#__PURE__*/_jsxDEV(Bot, {\n                size: 48\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Bonjour ! Je suis votre assistant ESG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Posez-moi des questions sur vos donn\\xE9es ESG, demandez une analyse comparative ou des recommandations d'am\\xE9lioration.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quick-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Actions rapides :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"action-buttons\",\n                children: getQuickActions().map((action, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"action-btn\",\n                  onClick: () => {\n                    setInputMessage(action.prompt);\n                  },\n                  children: action.label\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messages-list\",\n            children: [messages.map(message => {\n              var _message$metadata, _message$metadata2;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `message ${message.type} ${message.isError ? 'error' : ''}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-avatar\",\n                  children: message.type === 'user' ? /*#__PURE__*/_jsxDEV(User, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 50\n                  }, this) : /*#__PURE__*/_jsxDEV(Bot, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 71\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"message-text\",\n                    children: formatMessage(message.content)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"message-timestamp\",\n                    children: [new Date(message.timestamp).toLocaleTimeString(), ((_message$metadata = message.metadata) === null || _message$metadata === void 0 ? void 0 : _message$metadata.company) && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"message-company\",\n                      children: [\"\\u2022 \", message.metadata.company]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 316,\n                      columnNumber: 27\n                    }, this), ((_message$metadata2 = message.metadata) === null || _message$metadata2 === void 0 ? void 0 : _message$metadata2.aiUsed) && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"message-ai\",\n                      children: \"\\u2022 \\uD83E\\uDD16 IA\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 21\n                }, this)]\n              }, message.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 19\n              }, this);\n            }), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message bot\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-avatar\",\n                children: /*#__PURE__*/_jsxDEV(Bot, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"typing-indicator\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: inputMessage,\n              onChange: e => setInputMessage(e.target.value),\n              onKeyPress: handleKeyPress,\n              placeholder: \"Posez votre question sur les donn\\xE9es ESG...\",\n              rows: \"1\",\n              className: \"message-input\",\n              disabled: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: sendMessage,\n              disabled: !inputMessage.trim() || isLoading,\n              className: \"send-button\",\n              children: /*#__PURE__*/_jsxDEV(Send, {\n                size: 18\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-footer\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ai-status\",\n              children: esgChatbot.ollamaAvailable ? '🤖 IA disponible' : '📊 Mode analyse basique'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"ea1xIda2gpLnj/e/UgKUgwabrS4=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Send","Bot","User","Trash2","Plus","MessageSquare","apiService","jsxDEV","_jsxDEV","Chatbot","darkMode","_s","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","conversations","setConversations","currentConversationId","setCurrentConversationId","selectedCompany","setSelectedCompany","companies","setCompanies","messagesEndRef","loadCompanies","loadConversations","scrollToBottom","response","getCompanies","data","error","console","savedConversations","JSON","parse","localStorage","getItem","saveConversations","setItem","stringify","_messagesEndRef$curre","current","scrollIntoView","behavior","startNewConversation","newConversationId","Date","now","newConversation","id","title","createdAt","toISOString","prev","updated","selectConversation","conversationId","conversation","find","c","deleteConversation","e","stopPropagation","updatedConversations","filter","sendMessage","trim","userMessage","type","content","timestamp","updatedMessages","esgChat","botMessage","metadata","company","aiUsed","ai_used","finalMessages","map","conv","slice","length","errorMessage","isError","handleKeyPress","key","shiftKey","preventDefault","formatMessage","split","line","index","children","fileName","_jsxFileName","lineNumber","columnNumber","getQuickActions","label","prompt","className","onClick","size","value","onChange","target","action","message","_message$metadata","_message$metadata2","toLocaleTimeString","ref","onKeyPress","placeholder","rows","disabled","esgChatbot","ollamaAvailable","_c","$RefreshReg$"],"sources":["C:/Users/informasud/Desktop/Projets/ESG_Banchmarking_Project/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Send, Bot, User, Trash2, Plus, MessageSquare } from 'lucide-react';\r\nimport apiService from '../services/api';\r\nimport './Chatbot.css';\r\n\r\nconst Chatbot = ({ darkMode }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentConversationId, setCurrentConversationId] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState('');\r\n  const [companies, setCompanies] = useState([]);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Charger les entreprises disponibles\r\n  useEffect(() => {\r\n    loadCompanies();\r\n    loadConversations();\r\n  }, []);\r\n\r\n  // Scroll vers le bas à chaque nouveau message\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const loadCompanies = async () => {\r\n    try {\r\n      const response = await apiService.getCompanies();\r\n      setCompanies(response.data);\r\n    } catch (error) {\r\n      console.error('Erreur chargement entreprises:', error);\r\n    }\r\n  };\r\n\r\n  const loadConversations = () => {\r\n    // Pour l'instant, on simule des conversations\r\n    // Plus tard, vous pourrez les stocker dans localStorage ou une base de données\r\n    const savedConversations = JSON.parse(localStorage.getItem('esg_conversations') || '[]');\r\n    setConversations(savedConversations);\r\n  };\r\n\r\n  const saveConversations = (conversations) => {\r\n    localStorage.setItem('esg_conversations', JSON.stringify(conversations));\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const startNewConversation = () => {\r\n    const newConversationId = `conv_${Date.now()}`;\r\n    const newConversation = {\r\n      id: newConversationId,\r\n      title: 'Nouvelle discussion',\r\n      createdAt: new Date().toISOString(),\r\n      messages: []\r\n    };\r\n\r\n    setConversations(prev => {\r\n      const updated = [newConversation, ...prev];\r\n      saveConversations(updated);\r\n      return updated;\r\n    });\r\n\r\n    setCurrentConversationId(newConversationId);\r\n    setMessages([]);\r\n    setInputMessage('');\r\n    setSelectedCompany('');\r\n  };\r\n\r\n  const selectConversation = (conversationId) => {\r\n    const conversation = conversations.find(c => c.id === conversationId);\r\n    if (conversation) {\r\n      setCurrentConversationId(conversationId);\r\n      setMessages(conversation.messages);\r\n    }\r\n  };\r\n\r\n  const deleteConversation = (conversationId, e) => {\r\n    e.stopPropagation();\r\n    const updatedConversations = conversations.filter(c => c.id !== conversationId);\r\n    setConversations(updatedConversations);\r\n    saveConversations(updatedConversations);\r\n\r\n    if (currentConversationId === conversationId) {\r\n      startNewConversation();\r\n    }\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!inputMessage.trim() || isLoading) return;\r\n\r\n    const userMessage = {\r\n      id: Date.now(),\r\n      type: 'user',\r\n      content: inputMessage,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    // Ajouter le message utilisateur\r\n    const updatedMessages = [...messages, userMessage];\r\n    setMessages(updatedMessages);\r\n    setInputMessage('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Appeler l'API du chatbot ESG\r\n      const response = await apiService.esgChat(inputMessage, selectedCompany);\r\n      \r\n      const botMessage = {\r\n        id: Date.now() + 1,\r\n        type: 'bot',\r\n        content: response.data.response,\r\n        timestamp: new Date().toISOString(),\r\n        metadata: {\r\n          company: response.data.company,\r\n          aiUsed: response.data.ai_used\r\n        }\r\n      };\r\n\r\n      const finalMessages = [...updatedMessages, botMessage];\r\n      setMessages(finalMessages);\r\n\r\n      // Mettre à jour la conversation\r\n      if (currentConversationId) {\r\n        const updatedConversations = conversations.map(conv => {\r\n          if (conv.id === currentConversationId) {\r\n            return {\r\n              ...conv,\r\n              title: conv.title === 'Nouvelle discussion' ? \r\n                inputMessage.slice(0, 30) + (inputMessage.length > 30 ? '...' : '') : \r\n                conv.title,\r\n              messages: finalMessages\r\n            };\r\n          }\r\n          return conv;\r\n        });\r\n        setConversations(updatedConversations);\r\n        saveConversations(updatedConversations);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Erreur envoi message:', error);\r\n      \r\n      const errorMessage = {\r\n        id: Date.now() + 1,\r\n        type: 'bot',\r\n        content: \"Désolé, une erreur s'est produite. Veuillez réessayer.\",\r\n        timestamp: new Date().toISOString(),\r\n        isError: true\r\n      };\r\n\r\n      setMessages(prev => [...prev, errorMessage]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  const formatMessage = (content) => {\r\n    // Convertir les retours à la ligne en <br />\r\n    return content.split('\\n').map((line, index) => (\r\n      <span key={index}>\r\n        {line}\r\n        {index < content.split('\\n').length - 1 && <br />}\r\n      </span>\r\n    ));\r\n  };\r\n\r\n  const getQuickActions = () => [\r\n    {\r\n      label: \"Analyser nos performances ESG\",\r\n      prompt: \"Analyse nos performances ESG globales et identifie nos points forts et axes d'amélioration\"\r\n    },\r\n    {\r\n      label: \"Comparer avec le secteur\",\r\n      prompt: \"Comment se positionne notre entreprise par rapport aux standards du secteur ?\"\r\n    },\r\n    {\r\n      label: \"Recommandations d'amélioration\",\r\n      prompt: \"Quelles sont tes recommandations prioritaires pour améliorer notre score ESG ?\"\r\n    },\r\n    {\r\n      label: \"Rapport de conformité\",\r\n      prompt: \"Évalue notre conformité aux réglementations ESG actuelles et futures\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className={`chatbot-container ${darkMode ? 'dark' : 'light'}`}>\r\n      <div className=\"chatbot-layout\">\r\n        {/* Sidebar des conversations */}\r\n        <div className=\"conversations-sidebar\">\r\n          <div className=\"sidebar-header\">\r\n            <h3>Discussions ESG</h3>\r\n            <button \r\n              className=\"new-chat-btn\"\r\n              onClick={startNewConversation}\r\n              title=\"Nouvelle discussion\"\r\n            >\r\n              <Plus size={18} />\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"conversations-list\">\r\n            {conversations.map(conversation => (\r\n              <div\r\n                key={conversation.id}\r\n                className={`conversation-item ${\r\n                  currentConversationId === conversation.id ? 'active' : ''\r\n                }`}\r\n                onClick={() => selectConversation(conversation.id)}\r\n              >\r\n                <MessageSquare size={16} />\r\n                <span className=\"conversation-title\">{conversation.title}</span>\r\n                <button\r\n                  className=\"delete-conversation\"\r\n                  onClick={(e) => deleteConversation(conversation.id, e)}\r\n                  title=\"Supprimer\"\r\n                >\r\n                  <Trash2 size={14} />\r\n                </button>\r\n              </div>\r\n            ))}\r\n            \r\n            {conversations.length === 0 && (\r\n              <div className=\"empty-conversations\">\r\n                <MessageSquare size={24} />\r\n                <p>Aucune discussion</p>\r\n                <button \r\n                  className=\"start-chat-btn\"\r\n                  onClick={startNewConversation}\r\n                >\r\n                  Commencer une discussion\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Zone de chat principale */}\r\n        <div className=\"chat-main\">\r\n          <div className=\"chat-header\">\r\n            <div className=\"header-left\">\r\n              <Bot size={20} />\r\n              <h2>Assistant ESG</h2>\r\n            </div>\r\n            \r\n            <div className=\"company-selector\">\r\n              <select\r\n                value={selectedCompany}\r\n                onChange={(e) => setSelectedCompany(e.target.value)}\r\n                className=\"company-dropdown\"\r\n              >\r\n                <option value=\"\">Toutes les entreprises</option>\r\n                {companies.map(company => (\r\n                  <option key={company} value={company}>\r\n                    {company}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Zone des messages */}\r\n          <div className=\"messages-container\">\r\n            {messages.length === 0 ? (\r\n              <div className=\"welcome-screen\">\r\n                <div className=\"welcome-icon\">\r\n                  <Bot size={48} />\r\n                </div>\r\n                <h3>Bonjour ! Je suis votre assistant ESG</h3>\r\n                <p>Posez-moi des questions sur vos données ESG, demandez une analyse comparative ou des recommandations d'amélioration.</p>\r\n                \r\n                <div className=\"quick-actions\">\r\n                  <h4>Actions rapides :</h4>\r\n                  <div className=\"action-buttons\">\r\n                    {getQuickActions().map((action, index) => (\r\n                      <button\r\n                        key={index}\r\n                        className=\"action-btn\"\r\n                        onClick={() => {\r\n                          setInputMessage(action.prompt);\r\n                        }}\r\n                      >\r\n                        {action.label}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"messages-list\">\r\n                {messages.map(message => (\r\n                  <div\r\n                    key={message.id}\r\n                    className={`message ${message.type} ${message.isError ? 'error' : ''}`}\r\n                  >\r\n                    <div className=\"message-avatar\">\r\n                      {message.type === 'user' ? <User size={16} /> : <Bot size={16} />}\r\n                    </div>\r\n                    <div className=\"message-content\">\r\n                      <div className=\"message-text\">\r\n                        {formatMessage(message.content)}\r\n                      </div>\r\n                      <div className=\"message-timestamp\">\r\n                        {new Date(message.timestamp).toLocaleTimeString()}\r\n                        {message.metadata?.company && (\r\n                          <span className=\"message-company\">\r\n                            • {message.metadata.company}\r\n                          </span>\r\n                        )}\r\n                        {message.metadata?.aiUsed && (\r\n                          <span className=\"message-ai\">• 🤖 IA</span>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                \r\n                {isLoading && (\r\n                  <div className=\"message bot\">\r\n                    <div className=\"message-avatar\">\r\n                      <Bot size={16} />\r\n                    </div>\r\n                    <div className=\"message-content\">\r\n                      <div className=\"typing-indicator\">\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                \r\n                <div ref={messagesEndRef} />\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Zone de saisie */}\r\n          <div className=\"input-container\">\r\n            <div className=\"input-wrapper\">\r\n              <textarea\r\n                value={inputMessage}\r\n                onChange={(e) => setInputMessage(e.target.value)}\r\n                onKeyPress={handleKeyPress}\r\n                placeholder=\"Posez votre question sur les données ESG...\"\r\n                rows=\"1\"\r\n                className=\"message-input\"\r\n                disabled={isLoading}\r\n              />\r\n              <button\r\n                onClick={sendMessage}\r\n                disabled={!inputMessage.trim() || isLoading}\r\n                className=\"send-button\"\r\n              >\r\n                <Send size={18} />\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"input-footer\">\r\n              <span className=\"ai-status\">\r\n                {esgChatbot.ollamaAvailable ? '🤖 IA disponible' : '📊 Mode analyse basique'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}